{"version":3,"sources":["set.js"],"names":["set","l","k","v"],"mappings":";;;;;;;AAEA;;AACA;;AAGA;;;;;;;;;;;;AAYO,IAAMA,oBACX,SADWA,GACX,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,SAAa,oBAAOF,CAAP,EAAUC,CAAV,EAAa;AAAA,WAAMC,CAAN;AAAA,GAAb,CAAb;AAAA,CADK;kBAIQ,kBAAMH,GAAN,C","file":"set.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/list","sourcesContent":["// @flow\nimport type { List } from '../consts/types'\nimport { curry }     from '../utils/curry'\nimport { update }    from './update'\n\n\n/**\n * takes a list, an index and a value. returns\n * a new list with the value at the index set\n * as the new value.\n *\n * @name list.set\n * @param  {List} l to set value on\n * @param  {any}  k is the index of the value to get\n * @param  {any}  v to set on list\n * @return {List} a new list with the value at k set as v\n * @since 0.0.1\n */\nexport const set: (l: List, k: any, v: any) => List =\n  (l, k, v) => update(l, k, () => v)\n\n\nexport default curry(set)\n"]}