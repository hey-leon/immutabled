{"version":3,"sources":["set.js"],"names":["set","m","k","v"],"mappings":";;;;;;;AAEA;;AACA;;AAGA;;;;;;;;;;;AAWO,IAAMA,oBACX,SADWA,GACX,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,SAAa,oBAAOF,CAAP,EAAUC,CAAV,EAAa;AAAA,WAAMC,CAAN;AAAA,GAAb,CAAb;AAAA,CADK;kBAIQ,kBAAMH,GAAN,C","file":"set.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/map","sourcesContent":["// @flow\nimport type { Map } from '../consts/types'\nimport { curry }    from '../utils/curry'\nimport { update }   from './update'\n\n\n/**\n * takes a key and a value and sets the key on the map\n * with the value.\n *\n * @name map.set\n * @param  {Map} m to set value on\n * @param  {any} k is the key of the value to get\n * @param  {any} v to set on map\n * @return {Map} an updated copy\n * @since 0.0.1\n */\nexport const set: (m: Map, k: any, v: any) => Map =\n  (m, k, v) => update(m, k, () => v)\n\n\nexport default curry(set)\n"]}