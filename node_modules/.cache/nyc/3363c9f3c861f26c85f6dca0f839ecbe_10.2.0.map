{"version":3,"sources":["of.js"],"names":["of","s","__type__","map","build","__data__","__size__","Object","keys","length","data","size"],"mappings":";;;;;;;;;AAEA;;;;;;AAGA;;;;;;;;AAQO,IAAMA,kBACX,SADWA,EACX;AAAA,MAACC,CAAD,uEAAG,EAAH;AAAA,SAAUA,EAAEC,QAAF,KAAe,kBAAQC,GAAvB,GACAC,mBAAWH,EAAEI,QAAb,GAAyBJ,EAAEK,QAA3B,CADA,GAEAF,mBAAWH,CAAX,GAAgBM,OAAOC,IAAP,CAAYP,CAAZ,EAAeQ,MAA/B,CAFV;AAAA,CADK;;AAMA,IAAML,wBACX,SADWA,KACX,CAACM,IAAD,EAAOC,IAAP;AAAA,SAAiB;AACfT,cAAU,kBAAQC,GADH;AAEfE,cAAUK,IAFK;AAGfJ,cAAUK;AAHK,GAAjB;AAAA,CADK;;kBAQQX,E","file":"of.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/map","sourcesContent":["// @flow\nimport type { Map } from '../consts/types'\nimport symbols      from '../consts/symbols'\n\n\n/**\n * constructs an immutable map from a map like structure.\n *\n * @name map.of\n * @param  {Map|Object} s map like structure\n * @return {Map} immutable map\n * @since 0.0.1\n */\nexport const of: (s?: Map | Object) => Map =\n  (s={}) => s.__type__ === symbols.map\n          ? build({ ...s.__data__ }, s.__size__)\n          : build({ ...s }, Object.keys(s).length)\n\n\nexport const build: (data: Object, size: number) => Map =\n  (data, size) => ({\n    __type__: symbols.map,\n    __data__: data,\n    __size__: size,\n  })\n\n\nexport default of\n"]}