'use strict';var cov_1rftqsawnt=function(){var path='/Users/leon/Development/Javascript/immut/source/list/indexOf.js',hash='11a63a75a57215ec2f96c7e259e7a3084b82370d',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/leon/Development/Javascript/immut/source/list/indexOf.js',statementMap:{'0':{start:{line:3,column:0},end:{line:5,column:3}},'1':{start:{line:6,column:0},end:{line:6,column:28}},'2':{start:{line:8,column:13},end:{line:8,column:38}},'3':{start:{line:21,column:14},end:{line:23,column:1}},'4':{start:{line:22,column:2},end:{line:22,column:53}},'5':{start:{line:25,column:0},end:{line:25,column:45}}},fnMap:{'0':{name:'indexOf',decl:{start:{line:21,column:41},end:{line:21,column:48}},loc:{start:{line:21,column:55},end:{line:23,column:1}},line:21}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_1rftqsawnt.s[0];Object.defineProperty(exports,"__esModule",{value:true});++cov_1rftqsawnt.s[1];exports.indexOf=undefined;var _curry=(++cov_1rftqsawnt.s[2],require('../utils/curry'));/**
 * takes a list and an entity and returns the index
 * of the entity in the list. if the entity does not
 * exist in the list then the return is -1.
 *
 * @name list.indexOf
 * @param  {List} l to indexOf
 * @param  {any} i to find index of
 * @return {number} the index of the entity or -1
 * @since 0.0.1
 */var indexOf=(++cov_1rftqsawnt.s[3],exports.indexOf=function indexOf(l,i){++cov_1rftqsawnt.f[0];++cov_1rftqsawnt.s[4];return Array.prototype.indexOf.call(l.__data__,i);});++cov_1rftqsawnt.s[5];exports.default=(0,_curry.curry)(indexOf);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4T2YuanMiXSwibmFtZXMiOlsiaW5kZXhPZiIsImwiLCJpIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJjYWxsIiwiX19kYXRhX18iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFHQTs7Ozs7Ozs7Ozs7QUFXTyxJQUFNQSw0QkFDWCxTQURXQSxPQUNYLENBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLFNBQVVDLE1BQU1DLFNBQU4sQ0FBZ0JKLE9BQWhCLENBQXdCSyxJQUF4QixDQUE2QkosRUFBRUssUUFBL0IsRUFBeUNKLENBQXpDLENBQVY7QUFBQSxDQURLOztrQkFJUSxrQkFBTUYsT0FBTixDIiwiZmlsZSI6ImluZGV4T2YuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlb24vRGV2ZWxvcG1lbnQvSmF2YXNjcmlwdC9pbW11dC9zb3VyY2UvbGlzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgdHlwZSB7IExpc3QgfSBmcm9tICcuLi9jb25zdHMvdHlwZXMnXG5pbXBvcnQgeyBjdXJyeSB9ICAgICBmcm9tICcuLi91dGlscy9jdXJyeSdcblxuXG4vKipcbiAqIHRha2VzIGEgbGlzdCBhbmQgYW4gZW50aXR5IGFuZCByZXR1cm5zIHRoZSBpbmRleFxuICogb2YgdGhlIGVudGl0eSBpbiB0aGUgbGlzdC4gaWYgdGhlIGVudGl0eSBkb2VzIG5vdFxuICogZXhpc3QgaW4gdGhlIGxpc3QgdGhlbiB0aGUgcmV0dXJuIGlzIC0xLlxuICpcbiAqIEBuYW1lIGxpc3QuaW5kZXhPZlxuICogQHBhcmFtICB7TGlzdH0gbCB0byBpbmRleE9mXG4gKiBAcGFyYW0gIHthbnl9IGkgdG8gZmluZCBpbmRleCBvZlxuICogQHJldHVybiB7bnVtYmVyfSB0aGUgaW5kZXggb2YgdGhlIGVudGl0eSBvciAtMVxuICogQHNpbmNlIDAuMC4xXG4gKi9cbmV4cG9ydCBjb25zdCBpbmRleE9mOiAobDogTGlzdCwgaTogYW55KSA9PiBudW1iZXIgPVxuICAobCwgaSkgPT4gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChsLl9fZGF0YV9fLCBpKVxuXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGluZGV4T2YpXG4iXX0=