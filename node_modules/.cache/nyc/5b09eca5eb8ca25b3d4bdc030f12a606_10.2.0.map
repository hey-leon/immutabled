{"version":3,"sources":["del.js"],"names":["del","m","k","m2","__size__","__data__"],"mappings":";;;;;;;AAEA;;AACA;;AAGA;;;;;;;;;;AAUO,IAAMA,oBACX,SADWA,GACX,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACR,MAAMC,KAAK,YAAGF,CAAH,CAAX;;AAEAE,KAAGC,QAAH,GAAcF,KAAKD,EAAEI,QAAP,GACVJ,EAAEG,QAAF,GAAa,CADH,GAEVH,EAAEG,QAFN;;AAIA,SAAOD,GAAGE,QAAH,CAAYH,CAAZ,CAAP;;AAEA,SAAOC,EAAP;AACD,CAXI;kBAcQ,kBAAMH,GAAN,C","file":"del.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/map","sourcesContent":["// @flow\nimport type { Map } from '../consts/types'\nimport { curry }    from '../utils/curry'\nimport { of }       from './of'\n\n\n/**\n * takes a map and a key and returns a new map\n * with the entity at the key removed.\n *\n * @name map.del\n * @param  {Map} m to delete value from\n * @param  {any} k key to delete the value at\n * @return {Map} copy of m without value at k\n * @since 0.0.3\n */\nexport const del: (m: Map, k: any) => Map =\n  (m, k) => {\n    const m2 = of(m)\n\n    m2.__size__ = k in m.__data__\n      ? m.__size__ - 1\n      : m.__size__\n\n    delete m2.__data__[k]\n\n    return m2\n  }\n\n\nexport default curry(del)\n"]}