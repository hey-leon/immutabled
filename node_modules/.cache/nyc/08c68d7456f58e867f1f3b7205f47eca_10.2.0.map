{"version":3,"sources":["map.js"],"names":["map","l","f","Array","prototype","call","__data__"],"mappings":";;;;;;;AAEA;;AACA;;AAGA;;;;;;;;;;;AAWO,IAAMA,oBACX,SADWA,GACX,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,YAAIC,MAAMC,SAAN,CAAgBJ,GAAhB,CAAoBK,IAApB,CAAyBJ,EAAEK,QAA3B,EAAqCJ,CAArC,CAAJ,CAAV;AAAA,CADK;kBAIQ,kBAAMF,GAAN,C","file":"map.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/list","sourcesContent":["// @flow\nimport type { List, Func } from '../consts/types'\nimport { curry }           from '../utils/curry'\nimport { of }              from './of'\n\n\n/**\n * takes a list and a function and applies the function\n * to each entity in the list returning a list\n * of the updated entities.\n *\n * @name list.map\n * @param  {List} l to map\n * @param  {any} f to be mapping function\n * @return {List} of the updated entities\n * @since 0.0.1\n */\nexport const map: (l: List, f: Func) => List =\n  (l, f) => of( Array.prototype.map.call(l.__data__, f) )\n\n\nexport default curry(map)\n"]}