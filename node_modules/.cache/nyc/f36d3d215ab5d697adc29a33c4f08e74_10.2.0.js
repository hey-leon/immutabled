'use strict';var cov_18qjqyhkf0=function(){var path='/Users/leon/Development/Javascript/immut/source/list/every.js',hash='5fc4b629554110c16a746eaf957aa0a2c8c60c09',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/leon/Development/Javascript/immut/source/list/every.js',statementMap:{'0':{start:{line:3,column:0},end:{line:5,column:3}},'1':{start:{line:6,column:0},end:{line:6,column:26}},'2':{start:{line:8,column:13},end:{line:8,column:38}},'3':{start:{line:21,column:12},end:{line:23,column:1}},'4':{start:{line:22,column:2},end:{line:22,column:51}},'5':{start:{line:25,column:0},end:{line:25,column:43}}},fnMap:{'0':{name:'every',decl:{start:{line:21,column:37},end:{line:21,column:42}},loc:{start:{line:21,column:49},end:{line:23,column:1}},line:21}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_18qjqyhkf0.s[0];Object.defineProperty(exports,"__esModule",{value:true});++cov_18qjqyhkf0.s[1];exports.every=undefined;var _curry=(++cov_18qjqyhkf0.s[2],require('../utils/curry'));/**
 * tests all entities against the predicate, until
 * one returns false. if one returns false list.every
 * returns false, else true.
 *
 * @name list.every
 * @param  {List} l to check if every
 * @param  {Func} f to be predicate
 * @return {boolean} if predicate returns true for all entities
 * @since 0.0.1
 */var every=(++cov_18qjqyhkf0.s[3],exports.every=function every(l,f){++cov_18qjqyhkf0.f[0];++cov_18qjqyhkf0.s[4];return Array.prototype.every.call(l.__data__,f);});++cov_18qjqyhkf0.s[5];exports.default=(0,_curry.curry)(every);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZXJ5LmpzIl0sIm5hbWVzIjpbImV2ZXJ5IiwibCIsImYiLCJBcnJheSIsInByb3RvdHlwZSIsImNhbGwiLCJfX2RhdGFfXyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUdBOzs7Ozs7Ozs7OztBQVdPLElBQU1BLHdCQUNYLFNBRFdBLEtBQ1gsQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsU0FBVUMsTUFBTUMsU0FBTixDQUFnQkosS0FBaEIsQ0FBc0JLLElBQXRCLENBQTJCSixFQUFFSyxRQUE3QixFQUF1Q0osQ0FBdkMsQ0FBVjtBQUFBLENBREs7O2tCQUlRLGtCQUFNRixLQUFOLEMiLCJmaWxlIjoiZXZlcnkuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlb24vRGV2ZWxvcG1lbnQvSmF2YXNjcmlwdC9pbW11dC9zb3VyY2UvbGlzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgdHlwZSB7IExpc3QsIEZ1bmMgfSBmcm9tICcuLi9jb25zdHMvdHlwZXMnXG5pbXBvcnQgeyBjdXJyeSB9ICAgICAgICAgICBmcm9tICcuLi91dGlscy9jdXJyeSdcblxuXG4vKipcbiAqIHRlc3RzIGFsbCBlbnRpdGllcyBhZ2FpbnN0IHRoZSBwcmVkaWNhdGUsIHVudGlsXG4gKiBvbmUgcmV0dXJucyBmYWxzZS4gaWYgb25lIHJldHVybnMgZmFsc2UgbGlzdC5ldmVyeVxuICogcmV0dXJucyBmYWxzZSwgZWxzZSB0cnVlLlxuICpcbiAqIEBuYW1lIGxpc3QuZXZlcnlcbiAqIEBwYXJhbSAge0xpc3R9IGwgdG8gY2hlY2sgaWYgZXZlcnlcbiAqIEBwYXJhbSAge0Z1bmN9IGYgdG8gYmUgcHJlZGljYXRlXG4gKiBAcmV0dXJuIHtib29sZWFufSBpZiBwcmVkaWNhdGUgcmV0dXJucyB0cnVlIGZvciBhbGwgZW50aXRpZXNcbiAqIEBzaW5jZSAwLjAuMVxuICovXG5leHBvcnQgY29uc3QgZXZlcnk6IChsOiBMaXN0LCBmOiBGdW5jKSA9PiBib29sZWFuID1cbiAgKGwsIGYpID0+IEFycmF5LnByb3RvdHlwZS5ldmVyeS5jYWxsKGwuX19kYXRhX18sIGYpXG5cblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZXZlcnkpXG5cbiJdfQ==