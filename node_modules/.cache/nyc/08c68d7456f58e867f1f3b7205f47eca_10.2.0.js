'use strict';var cov_xqk9i28lg=function(){var path='/Users/leon/Development/Javascript/immut/source/list/map.js',hash='ea699dde084a92f63143e841a166e2bf4e6d377a',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/leon/Development/Javascript/immut/source/list/map.js',statementMap:{'0':{start:{line:3,column:0},end:{line:5,column:3}},'1':{start:{line:6,column:0},end:{line:6,column:24}},'2':{start:{line:8,column:13},end:{line:8,column:38}},'3':{start:{line:10,column:10},end:{line:10,column:25}},'4':{start:{line:23,column:10},end:{line:25,column:1}},'5':{start:{line:24,column:2},end:{line:24,column:62}},'6':{start:{line:26,column:0},end:{line:26,column:41}}},fnMap:{'0':{name:'map',decl:{start:{line:23,column:33},end:{line:23,column:36}},loc:{start:{line:23,column:43},end:{line:25,column:1}},line:23}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_xqk9i28lg.s[0];Object.defineProperty(exports,"__esModule",{value:true});++cov_xqk9i28lg.s[1];exports.map=undefined;var _curry=(++cov_xqk9i28lg.s[2],require('../utils/curry'));var _of=(++cov_xqk9i28lg.s[3],require('./of'));/**
 * takes a list and a function and applies the function
 * to each entity in the list returning a list
 * of the updated entities.
 *
 * @name list.map
 * @param  {List} l to map
 * @param  {any} f to be mapping function
 * @return {List} of the updated entities
 * @since 0.0.1
 */var map=(++cov_xqk9i28lg.s[4],exports.map=function map(l,f){++cov_xqk9i28lg.f[0];++cov_xqk9i28lg.s[5];return(0,_of.of)(Array.prototype.map.call(l.__data__,f));});++cov_xqk9i28lg.s[6];exports.default=(0,_curry.curry)(map);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcC5qcyJdLCJuYW1lcyI6WyJtYXAiLCJsIiwiZiIsIkFycmF5IiwicHJvdG90eXBlIiwiY2FsbCIsIl9fZGF0YV9fIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBQ0E7O0FBR0E7Ozs7Ozs7Ozs7O0FBV08sSUFBTUEsb0JBQ1gsU0FEV0EsR0FDWCxDQUFDQyxDQUFELEVBQUlDLENBQUo7QUFBQSxTQUFVLFlBQUlDLE1BQU1DLFNBQU4sQ0FBZ0JKLEdBQWhCLENBQW9CSyxJQUFwQixDQUF5QkosRUFBRUssUUFBM0IsRUFBcUNKLENBQXJDLENBQUosQ0FBVjtBQUFBLENBREs7a0JBSVEsa0JBQU1GLEdBQU4sQyIsImZpbGUiOiJtYXAuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlb24vRGV2ZWxvcG1lbnQvSmF2YXNjcmlwdC9pbW11dC9zb3VyY2UvbGlzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgdHlwZSB7IExpc3QsIEZ1bmMgfSBmcm9tICcuLi9jb25zdHMvdHlwZXMnXG5pbXBvcnQgeyBjdXJyeSB9ICAgICAgICAgICBmcm9tICcuLi91dGlscy9jdXJyeSdcbmltcG9ydCB7IG9mIH0gICAgICAgICAgICAgIGZyb20gJy4vb2YnXG5cblxuLyoqXG4gKiB0YWtlcyBhIGxpc3QgYW5kIGEgZnVuY3Rpb24gYW5kIGFwcGxpZXMgdGhlIGZ1bmN0aW9uXG4gKiB0byBlYWNoIGVudGl0eSBpbiB0aGUgbGlzdCByZXR1cm5pbmcgYSBsaXN0XG4gKiBvZiB0aGUgdXBkYXRlZCBlbnRpdGllcy5cbiAqXG4gKiBAbmFtZSBsaXN0Lm1hcFxuICogQHBhcmFtICB7TGlzdH0gbCB0byBtYXBcbiAqIEBwYXJhbSAge2FueX0gZiB0byBiZSBtYXBwaW5nIGZ1bmN0aW9uXG4gKiBAcmV0dXJuIHtMaXN0fSBvZiB0aGUgdXBkYXRlZCBlbnRpdGllc1xuICogQHNpbmNlIDAuMC4xXG4gKi9cbmV4cG9ydCBjb25zdCBtYXA6IChsOiBMaXN0LCBmOiBGdW5jKSA9PiBMaXN0ID1cbiAgKGwsIGYpID0+IG9mKCBBcnJheS5wcm90b3R5cGUubWFwLmNhbGwobC5fX2RhdGFfXywgZikgKVxuXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KG1hcClcbiJdfQ==