'use strict';var cov_zickjfass=function(){var path='/Users/leon/Development/Javascript/immut/source/list/set.js',hash='fb1843c3aa28d6d39d78f4c6aa65388235a9b424',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/leon/Development/Javascript/immut/source/list/set.js',statementMap:{'0':{start:{line:3,column:0},end:{line:5,column:3}},'1':{start:{line:6,column:0},end:{line:6,column:24}},'2':{start:{line:8,column:13},end:{line:8,column:38}},'3':{start:{line:10,column:14},end:{line:10,column:33}},'4':{start:{line:24,column:10},end:{line:28,column:1}},'5':{start:{line:25,column:2},end:{line:27,column:5}},'6':{start:{line:26,column:4},end:{line:26,column:13}},'7':{start:{line:29,column:0},end:{line:29,column:41}}},fnMap:{'0':{name:'set',decl:{start:{line:24,column:33},end:{line:24,column:36}},loc:{start:{line:24,column:46},end:{line:28,column:1}},line:24},'1':{name:'(anonymous_1)',decl:{start:{line:25,column:35},end:{line:25,column:36}},loc:{start:{line:25,column:47},end:{line:27,column:3}},line:25}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0},f:{'0':0,'1':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_zickjfass.s[0];Object.defineProperty(exports,"__esModule",{value:true});++cov_zickjfass.s[1];exports.set=undefined;var _curry=(++cov_zickjfass.s[2],require('../utils/curry'));var _update=(++cov_zickjfass.s[3],require('./update'));/**
 * takes a list, an index and a value. returns
 * a new list with the value at the index set
 * as the new value.
 *
 * @name list.set
 * @param  {List} l to set value on
 * @param  {any}  k is the index of the value to get
 * @param  {any}  v to set on list
 * @return {List} a new list with the value at k set as v
 * @since 0.0.1
 */var set=(++cov_zickjfass.s[4],exports.set=function set(l,k,v){++cov_zickjfass.f[0];++cov_zickjfass.s[5];return(0,_update.update)(l,k,function(){++cov_zickjfass.f[1];++cov_zickjfass.s[6];return v;});});++cov_zickjfass.s[7];exports.default=(0,_curry.curry)(set);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldC5qcyJdLCJuYW1lcyI6WyJzZXQiLCJsIiwiayIsInYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFHQTs7Ozs7Ozs7Ozs7O0FBWU8sSUFBTUEsb0JBQ1gsU0FEV0EsR0FDWCxDQUFDQyxDQUFELEVBQUlDLENBQUosRUFBT0MsQ0FBUDtBQUFBLFNBQWEsb0JBQU9GLENBQVAsRUFBVUMsQ0FBVixFQUFhO0FBQUEsV0FBTUMsQ0FBTjtBQUFBLEdBQWIsQ0FBYjtBQUFBLENBREs7a0JBSVEsa0JBQU1ILEdBQU4sQyIsImZpbGUiOiJzZXQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlb24vRGV2ZWxvcG1lbnQvSmF2YXNjcmlwdC9pbW11dC9zb3VyY2UvbGlzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgdHlwZSB7IExpc3QgfSBmcm9tICcuLi9jb25zdHMvdHlwZXMnXG5pbXBvcnQgeyBjdXJyeSB9ICAgICBmcm9tICcuLi91dGlscy9jdXJyeSdcbmltcG9ydCB7IHVwZGF0ZSB9ICAgIGZyb20gJy4vdXBkYXRlJ1xuXG5cbi8qKlxuICogdGFrZXMgYSBsaXN0LCBhbiBpbmRleCBhbmQgYSB2YWx1ZS4gcmV0dXJuc1xuICogYSBuZXcgbGlzdCB3aXRoIHRoZSB2YWx1ZSBhdCB0aGUgaW5kZXggc2V0XG4gKiBhcyB0aGUgbmV3IHZhbHVlLlxuICpcbiAqIEBuYW1lIGxpc3Quc2V0XG4gKiBAcGFyYW0gIHtMaXN0fSBsIHRvIHNldCB2YWx1ZSBvblxuICogQHBhcmFtICB7YW55fSAgayBpcyB0aGUgaW5kZXggb2YgdGhlIHZhbHVlIHRvIGdldFxuICogQHBhcmFtICB7YW55fSAgdiB0byBzZXQgb24gbGlzdFxuICogQHJldHVybiB7TGlzdH0gYSBuZXcgbGlzdCB3aXRoIHRoZSB2YWx1ZSBhdCBrIHNldCBhcyB2XG4gKiBAc2luY2UgMC4wLjFcbiAqL1xuZXhwb3J0IGNvbnN0IHNldDogKGw6IExpc3QsIGs6IGFueSwgdjogYW55KSA9PiBMaXN0ID1cbiAgKGwsIGssIHYpID0+IHVwZGF0ZShsLCBrLCAoKSA9PiB2KVxuXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KHNldClcbiJdfQ==