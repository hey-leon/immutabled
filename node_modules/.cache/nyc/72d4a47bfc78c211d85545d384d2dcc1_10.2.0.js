'use strict';var cov_2rpl79fyru=function(){var path='/Users/leon/Development/Javascript/immut/source/list/some.js',hash='268648db7490513c98174d68dd175114e597227f',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/leon/Development/Javascript/immut/source/list/some.js',statementMap:{'0':{start:{line:3,column:0},end:{line:5,column:3}},'1':{start:{line:6,column:0},end:{line:6,column:25}},'2':{start:{line:8,column:13},end:{line:8,column:38}},'3':{start:{line:21,column:11},end:{line:23,column:1}},'4':{start:{line:22,column:2},end:{line:22,column:50}},'5':{start:{line:25,column:0},end:{line:25,column:42}}},fnMap:{'0':{name:'some',decl:{start:{line:21,column:35},end:{line:21,column:39}},loc:{start:{line:21,column:46},end:{line:23,column:1}},line:21}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_2rpl79fyru.s[0];Object.defineProperty(exports,"__esModule",{value:true});++cov_2rpl79fyru.s[1];exports.some=undefined;var _curry=(++cov_2rpl79fyru.s[2],require('../utils/curry'));/**
 * tests all entities against the predicate until
 * one returns true. if one returns true list.some
 * returns true else returns false.
 *
 * @name list.some
 * @param  {List} l to check if some
 * @param  {any}  f to be predicate
 * @return {bool} where the predicate passes
 * @since 0.0.1
 */var some=(++cov_2rpl79fyru.s[3],exports.some=function some(l,f){++cov_2rpl79fyru.f[0];++cov_2rpl79fyru.s[4];return Array.prototype.some.call(l.__data__,f);});++cov_2rpl79fyru.s[5];exports.default=(0,_curry.curry)(some);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbWUuanMiXSwibmFtZXMiOlsic29tZSIsImwiLCJmIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJjYWxsIiwiX19kYXRhX18iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFHQTs7Ozs7Ozs7Ozs7QUFXTyxJQUFNQSxzQkFDWCxTQURXQSxJQUNYLENBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLFNBQVVDLE1BQU1DLFNBQU4sQ0FBZ0JKLElBQWhCLENBQXFCSyxJQUFyQixDQUEwQkosRUFBRUssUUFBNUIsRUFBc0NKLENBQXRDLENBQVY7QUFBQSxDQURLOztrQkFJUSxrQkFBTUYsSUFBTixDIiwiZmlsZSI6InNvbWUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlb24vRGV2ZWxvcG1lbnQvSmF2YXNjcmlwdC9pbW11dC9zb3VyY2UvbGlzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgdHlwZSB7IExpc3QsIEZ1bmMgfSBmcm9tICcuLi9jb25zdHMvdHlwZXMnXG5pbXBvcnQgeyBjdXJyeSB9ICAgICAgICAgICBmcm9tICcuLi91dGlscy9jdXJyeSdcblxuXG4vKipcbiAqIHRlc3RzIGFsbCBlbnRpdGllcyBhZ2FpbnN0IHRoZSBwcmVkaWNhdGUgdW50aWxcbiAqIG9uZSByZXR1cm5zIHRydWUuIGlmIG9uZSByZXR1cm5zIHRydWUgbGlzdC5zb21lXG4gKiByZXR1cm5zIHRydWUgZWxzZSByZXR1cm5zIGZhbHNlLlxuICpcbiAqIEBuYW1lIGxpc3Quc29tZVxuICogQHBhcmFtICB7TGlzdH0gbCB0byBjaGVjayBpZiBzb21lXG4gKiBAcGFyYW0gIHthbnl9ICBmIHRvIGJlIHByZWRpY2F0ZVxuICogQHJldHVybiB7Ym9vbH0gd2hlcmUgdGhlIHByZWRpY2F0ZSBwYXNzZXNcbiAqIEBzaW5jZSAwLjAuMVxuICovXG5leHBvcnQgY29uc3Qgc29tZTogKGw6IExpc3QsIGY6IEZ1bmMpID0+IGJvb2xlYW4gPVxuICAobCwgZikgPT4gQXJyYXkucHJvdG90eXBlLnNvbWUuY2FsbChsLl9fZGF0YV9fLCBmKVxuXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KHNvbWUpXG5cbiJdfQ==