'use strict';var cov_18lyn5pudg=function(){var path='/Users/leon/Development/Javascript/immut/source/list/filter.js',hash='bab018ab86a0234070aa03551629213392edc896',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/leon/Development/Javascript/immut/source/list/filter.js',statementMap:{'0':{start:{line:3,column:0},end:{line:5,column:3}},'1':{start:{line:6,column:0},end:{line:6,column:27}},'2':{start:{line:8,column:13},end:{line:8,column:38}},'3':{start:{line:10,column:10},end:{line:10,column:25}},'4':{start:{line:22,column:13},end:{line:24,column:1}},'5':{start:{line:23,column:2},end:{line:23,column:65}},'6':{start:{line:25,column:0},end:{line:25,column:44}}},fnMap:{'0':{name:'filter',decl:{start:{line:22,column:39},end:{line:22,column:45}},loc:{start:{line:22,column:52},end:{line:24,column:1}},line:22}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_18lyn5pudg.s[0];Object.defineProperty(exports,"__esModule",{value:true});++cov_18lyn5pudg.s[1];exports.filter=undefined;var _curry=(++cov_18lyn5pudg.s[2],require('../utils/curry'));var _of=(++cov_18lyn5pudg.s[3],require('./of'));/**
 * takes a list and a predicate and returns a new list consisting
 * of the elements which pass the predicate.
 *
 * @name list.filter
 * @param  {List} l to filter
 * @param  {any} f to be predicate
 * @return {List} of elements that pass the predicate
 * @since 0.0.1
 */var filter=(++cov_18lyn5pudg.s[4],exports.filter=function filter(l,f){++cov_18lyn5pudg.f[0];++cov_18lyn5pudg.s[5];return(0,_of.of)(Array.prototype.filter.call(l.__data__,f));});++cov_18lyn5pudg.s[6];exports.default=(0,_curry.curry)(filter);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlci5qcyJdLCJuYW1lcyI6WyJmaWx0ZXIiLCJsIiwiZiIsIkFycmF5IiwicHJvdG90eXBlIiwiY2FsbCIsIl9fZGF0YV9fIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBQ0E7O0FBR0E7Ozs7Ozs7Ozs7QUFVTyxJQUFNQSwwQkFDWCxTQURXQSxNQUNYLENBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLFNBQVUsWUFBSUMsTUFBTUMsU0FBTixDQUFnQkosTUFBaEIsQ0FBdUJLLElBQXZCLENBQTRCSixFQUFFSyxRQUE5QixFQUF3Q0osQ0FBeEMsQ0FBSixDQUFWO0FBQUEsQ0FESztrQkFJUSxrQkFBTUYsTUFBTixDIiwiZmlsZSI6ImZpbHRlci5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGVvbi9EZXZlbG9wbWVudC9KYXZhc2NyaXB0L2ltbXV0L3NvdXJjZS9saXN0Iiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbmltcG9ydCB0eXBlIHsgTGlzdCwgRnVuYyB9IGZyb20gJy4uL2NvbnN0cy90eXBlcydcbmltcG9ydCB7IGN1cnJ5IH0gICAgICAgICAgIGZyb20gJy4uL3V0aWxzL2N1cnJ5J1xuaW1wb3J0IHsgb2YgfSAgICAgICAgICAgICAgZnJvbSAnLi9vZidcblxuXG4vKipcbiAqIHRha2VzIGEgbGlzdCBhbmQgYSBwcmVkaWNhdGUgYW5kIHJldHVybnMgYSBuZXcgbGlzdCBjb25zaXN0aW5nXG4gKiBvZiB0aGUgZWxlbWVudHMgd2hpY2ggcGFzcyB0aGUgcHJlZGljYXRlLlxuICpcbiAqIEBuYW1lIGxpc3QuZmlsdGVyXG4gKiBAcGFyYW0gIHtMaXN0fSBsIHRvIGZpbHRlclxuICogQHBhcmFtICB7YW55fSBmIHRvIGJlIHByZWRpY2F0ZVxuICogQHJldHVybiB7TGlzdH0gb2YgZWxlbWVudHMgdGhhdCBwYXNzIHRoZSBwcmVkaWNhdGVcbiAqIEBzaW5jZSAwLjAuMVxuICovXG5leHBvcnQgY29uc3QgZmlsdGVyOiAobDogTGlzdCwgZjogRnVuYykgPT4gTGlzdCA9XG4gIChsLCBmKSA9PiBvZiggQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKGwuX19kYXRhX18sIGYpIClcblxuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmaWx0ZXIpXG4iXX0=