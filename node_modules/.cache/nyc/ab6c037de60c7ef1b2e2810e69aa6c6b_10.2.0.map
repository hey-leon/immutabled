{"version":3,"sources":["update.js"],"names":["update","l","k","f","data","__data__"],"mappings":";;;;;;;AAEA;;AACA;;;;AAGA;;;;;;;;;;;;AAYO,IAAMA,0BACX,SADWA,MACX,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAa;AACX,MAAMC,oCAAYH,EAAEI,QAAd,EAAN;;AAEAD,OAAKF,CAAL,IAAUC,EAAEC,KAAKF,CAAL,CAAF,CAAV;;AAEA,SAAO,YAAGE,IAAH,CAAP;AACD,CAPI;;kBAUQ,kBAAMJ,MAAN,C","file":"update.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/list","sourcesContent":["// @flow\nimport type { List, Func } from '../consts/types'\nimport { curry }           from '../utils/curry'\nimport { of }              from './of'\n\n\n/**\n * takes a list, an index and an updater, and returns\n * a new list with the value at index updated by\n * the updater.\n *\n * @name list.update\n * @param  {List} l set value on\n * @param  {any}  k is the key of the value to get\n * @param  {Func} f to update value on map\n * @return {List} copy of list value a k updated by f\n * @since 0.0.1\n */\nexport const update: (l: List, k: any, f: Func) => List =\n  (l, k, f) => {\n    const data = [ ...l.__data__ ]\n\n    data[k] = f(data[k])\n\n    return of(data)\n  }\n\n\nexport default curry(update)\n"]}