{"version":3,"sources":["has.js"],"names":["has","l","v","Array","prototype","includes","call","__data__"],"mappings":";;;;;;;AAEA;;AAGA;;;;;;;;;AASO,IAAMA,oBACX,SADWA,GACX,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUC,MAAMC,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BL,EAAEM,QAAhC,EAA0CL,CAA1C,CAAV;AAAA,CADK;;kBAIQ,kBAAMF,GAAN,C","file":"has.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/list","sourcesContent":["// @flow\nimport type { List } from '../consts/types'\nimport { curry }     from '../utils/curry'\n\n\n/**\n * is a predicate for whether an entity exists in a list\n *\n * @name list.has\n * @param  {List} l to search in\n * @param  {any} v to be predicate\n * @return {bool} whether an entity exists in the list\n * @since 0.0.1\n */\nexport const has: (l: List, v: any) => boolean =\n  (l, v) => Array.prototype.includes.call(l.__data__, v)\n\n\nexport default curry(has)\n"]}