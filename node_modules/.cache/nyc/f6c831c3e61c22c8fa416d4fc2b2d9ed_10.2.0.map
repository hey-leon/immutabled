{"version":3,"sources":["indexOf.js"],"names":["indexOf","l","i","Array","prototype","call","__data__"],"mappings":";;;;;;;AAEA;;AAGA;;;;;;;;;;;AAWO,IAAMA,4BACX,SADWA,OACX,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUC,MAAMC,SAAN,CAAgBJ,OAAhB,CAAwBK,IAAxB,CAA6BJ,EAAEK,QAA/B,EAAyCJ,CAAzC,CAAV;AAAA,CADK;;kBAIQ,kBAAMF,OAAN,C","file":"indexOf.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/list","sourcesContent":["// @flow\nimport type { List } from '../consts/types'\nimport { curry }     from '../utils/curry'\n\n\n/**\n * takes a list and an entity and returns the index\n * of the entity in the list. if the entity does not\n * exist in the list then the return is -1.\n *\n * @name list.indexOf\n * @param  {List} l to indexOf\n * @param  {any} i to find index of\n * @return {number} the index of the entity or -1\n * @since 0.0.1\n */\nexport const indexOf: (l: List, i: any) => number =\n  (l, i) => Array.prototype.indexOf.call(l.__data__, i)\n\n\nexport default curry(indexOf)\n"]}