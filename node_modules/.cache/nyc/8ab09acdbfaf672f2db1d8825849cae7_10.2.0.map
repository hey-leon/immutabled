{"version":3,"sources":["curry.js"],"names":["_","Symbol","for","isNoBind","u","curry","curryn","f","length","curry1","c1","a","arguments","curry2","c2","b","_b","_a","curry3","c3","c","_c"],"mappings":"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","file":"curry.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/utils","sourcesContent":["// @flow\n\nimport type { Func } from '../consts/types'\n\n\n/**\n * _ is used as a no bind for partial application.\n *\n * @type {Symbol} _ no bind symbol\n * @since 0.0.1\n */\nexport const _: Symbol = Symbol.for('no_bind')\n\n\n/**\n * identifies if entity is no bind symbol\n *\n * @name isNoBind\n * @param  {any} u to be identified if is no bind symbol\n * @return {bool} whether entity is no bind\n * @since 0.0.1\n */\nexport const isNoBind: (u: any) => boolean = u => u === Symbol.for('no_bind')\n\n\n/**\n * takes a function of 1..3 args and returns a curried version\n *\n * @name curry\n * @param  {Func} f to be curried\n * @return {Func} a curried version of f\n * @since 0.0.1\n */\nexport const curry: (f: Func) => Func = f => curryn[f.length](f)\n\n\n/**\n * takes a function of 1 args and returns a curried version\n *\n * @name curry1\n * @param  {Func} f to be curried\n * @return {Func} a curried version of f\n * @since 0.0.1\n */\nexport const curry1: (f: Func) => Func =\n  f => function c1(a) {\n    switch (arguments.length) {\n      case 0:\n        return c1\n      default:\n        return isNoBind(a) ? c1 : f(a)\n    }\n  }\n\n\n/**\n * takes a function of 2 args and returns a curried version\n *\n * @name curry2\n * @param  {Func} f to be curried\n * @return {Func} a curried version of f\n * @since 0.0.1\n */\nexport const curry2: (f: Func) => Func =\n  f => function c2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return c2\n      case 1:\n        return isNoBind(a) ? c2 : curry1(_b => f(a, _b))\n      default:\n        return isNoBind(a) && isNoBind(b) ? c2\n             : isNoBind(a) ? curry1(_a => f(_a, b))\n             : isNoBind(b) ? curry1(_b => f(a, _b))\n             : f(a, b)\n    }\n  }\n\n\n/**\n * takes a function of 3 args and returns a curried version\n *\n * @name curry3\n * @param  {Func} f to be curried\n * @return {Func} a curried version of f\n * @since 0.0.1\n */\nexport const curry3: (f: Func) => Func =\n  f => function c3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return c3\n      case 1:\n        return isNoBind(a) ? c3 : curry2((_b, _c) => f(a, _b, _c))\n      case 2:\n        return isNoBind(a) && isNoBind(b) ? c3\n             : isNoBind(a) ? curry2((_a, _c) => f(_a, b, _c))\n             : isNoBind(b) ? curry2((_b, _c) => f(a, _b, _c))\n             : curry1(_c => f(a, b, _c))\n      default:\n        return isNoBind(a) && isNoBind(b) && isNoBind(c) ? c3\n             : isNoBind(a) && isNoBind(b) ? curry2((_a, _b) => f(_a, _b, c))\n             : isNoBind(a) && isNoBind(c) ? curry2((_a, _c) => f(_a, b, _c))\n             : isNoBind(b) && isNoBind(c) ? curry2((_b, _c) => f(a, _b, _c))\n             : isNoBind(a) ? curry1(_a => f(_a, b, c))\n             : isNoBind(b) ? curry1(_b => f(a, _b, c))\n             : isNoBind(c) ? curry1(_c => f(a, b, _c))\n             : f(a, b, c)\n    }\n  }\n\n\n/**\n * @type {Object} curryn map of curry functions\n * @since 0.0.1\n */\nconst curryn: { [k: number]: Func } =\n  { [1]: curry1\n  , [2]: curry2\n  , [3]: curry3\n  }\n"]}