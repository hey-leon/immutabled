{"version":3,"sources":["get.js"],"names":["get","i","k","__data__","ReferenceError"],"mappings":";;;;;;;AACA;;AACA;;AAIA;;;;;;;;;;;AAWO,IAAMA,oBACX,SADWA,GACX,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUA,KAAKD,EAAEE,QAAP,GACNF,EAAEE,QAAF,CAAWD,CAAX,CADM,GAEN,2BAAaE,cAAb,8BAAuDF,CAAvD,CAFJ;AAAA,CADK;;kBAMQ,kBAAMF,GAAN,C","file":"get.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/immut","sourcesContent":["// @flow\nimport { runtimeError } from '../utils/helpers'\nimport { curry }        from '../utils/curry'\nimport type { Immut }   from '../consts/types'\n\n\n/**\n * takes an immutable collection and a key and\n * returns the entity from the collection that\n * the key refences.\n *\n * @name immut.get\n * @param  {Immut} i immutable species\n * @param  {any}   k of member\n * @return {any} an entity from the collection\n * @since 0.0.1\n */\nexport const get: (i: Immut, k: any) => any =\n  (i, k) => k in i.__data__\n    ? i.__data__[k]\n    : runtimeError(ReferenceError, `Immut does not contain ${k}`)\n\n\nexport default curry(get)\n"]}