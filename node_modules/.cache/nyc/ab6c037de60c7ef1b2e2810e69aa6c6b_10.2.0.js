'use strict';var cov_15vv1l53pt=function(){var path='/Users/leon/Development/Javascript/immut/source/list/update.js',hash='3eaf171abfd40419f167570cf2252912babfc5ae',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/leon/Development/Javascript/immut/source/list/update.js',statementMap:{'0':{start:{line:3,column:0},end:{line:5,column:3}},'1':{start:{line:6,column:0},end:{line:6,column:27}},'2':{start:{line:8,column:13},end:{line:8,column:38}},'3':{start:{line:10,column:10},end:{line:10,column:25}},'4':{start:{line:12,column:35},end:{line:12,column:193}},'5':{start:{line:12,column:61},end:{line:12,column:145}},'6':{start:{line:12,column:126},end:{line:12,column:143}},'7':{start:{line:12,column:146},end:{line:12,column:158}},'8':{start:{line:12,column:168},end:{line:12,column:191}},'9':{start:{line:26,column:13},end:{line:32,column:1}},'10':{start:{line:27,column:13},end:{line:27,column:54}},'11':{start:{line:29,column:2},end:{line:29,column:23}},'12':{start:{line:31,column:2},end:{line:31,column:27}},'13':{start:{line:34,column:0},end:{line:34,column:44}}},fnMap:{'0':{name:'_toConsumableArray',decl:{start:{line:12,column:9},end:{line:12,column:27}},loc:{start:{line:12,column:33},end:{line:12,column:195}},line:12},'1':{name:'update',decl:{start:{line:26,column:39},end:{line:26,column:45}},loc:{start:{line:26,column:55},end:{line:32,column:1}},line:26}},branchMap:{'0':{loc:{start:{line:12,column:35},end:{line:12,column:193}},type:'if',locations:[{start:{line:12,column:35},end:{line:12,column:193}},{start:{line:12,column:35},end:{line:12,column:193}}],line:12}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0},f:{'0':0,'1':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_15vv1l53pt.s[0];Object.defineProperty(exports,"__esModule",{value:true});++cov_15vv1l53pt.s[1];exports.update=undefined;var _curry=(++cov_15vv1l53pt.s[2],require('../utils/curry'));var _of=(++cov_15vv1l53pt.s[3],require('./of'));function _toConsumableArray(arr){++cov_15vv1l53pt.f[0];++cov_15vv1l53pt.s[4];if(Array.isArray(arr)){++cov_15vv1l53pt.b[0][0];++cov_15vv1l53pt.s[5];for(var i=0,arr2=Array(arr.length);i<arr.length;i++){++cov_15vv1l53pt.s[6];arr2[i]=arr[i];}++cov_15vv1l53pt.s[7];return arr2;}else{++cov_15vv1l53pt.b[0][1];++cov_15vv1l53pt.s[8];return Array.from(arr);}}/**
 * takes a list, an index and an updater, and returns
 * a new list with the value at index updated by
 * the updater.
 *
 * @name list.update
 * @param  {List} l set value on
 * @param  {any}  k is the key of the value to get
 * @param  {Func} f to update value on map
 * @return {List} copy of list value a k updated by f
 * @since 0.0.1
 */var update=(++cov_15vv1l53pt.s[9],exports.update=function update(l,k,f){++cov_15vv1l53pt.f[1];var data=(++cov_15vv1l53pt.s[10],[].concat(_toConsumableArray(l.__data__)));++cov_15vv1l53pt.s[11];data[k]=f(data[k]);++cov_15vv1l53pt.s[12];return(0,_of.of)(data);});++cov_15vv1l53pt.s[13];exports.default=(0,_curry.curry)(update);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS5qcyJdLCJuYW1lcyI6WyJ1cGRhdGUiLCJsIiwiayIsImYiLCJkYXRhIiwiX19kYXRhX18iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7OztBQUdBOzs7Ozs7Ozs7Ozs7QUFZTyxJQUFNQSwwQkFDWCxTQURXQSxNQUNYLENBQUNDLENBQUQsRUFBSUMsQ0FBSixFQUFPQyxDQUFQLEVBQWE7QUFDWCxNQUFNQyxvQ0FBWUgsRUFBRUksUUFBZCxFQUFOOztBQUVBRCxPQUFLRixDQUFMLElBQVVDLEVBQUVDLEtBQUtGLENBQUwsQ0FBRixDQUFWOztBQUVBLFNBQU8sWUFBR0UsSUFBSCxDQUFQO0FBQ0QsQ0FQSTs7a0JBVVEsa0JBQU1KLE1BQU4sQyIsImZpbGUiOiJ1cGRhdGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlb24vRGV2ZWxvcG1lbnQvSmF2YXNjcmlwdC9pbW11dC9zb3VyY2UvbGlzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgdHlwZSB7IExpc3QsIEZ1bmMgfSBmcm9tICcuLi9jb25zdHMvdHlwZXMnXG5pbXBvcnQgeyBjdXJyeSB9ICAgICAgICAgICBmcm9tICcuLi91dGlscy9jdXJyeSdcbmltcG9ydCB7IG9mIH0gICAgICAgICAgICAgIGZyb20gJy4vb2YnXG5cblxuLyoqXG4gKiB0YWtlcyBhIGxpc3QsIGFuIGluZGV4IGFuZCBhbiB1cGRhdGVyLCBhbmQgcmV0dXJuc1xuICogYSBuZXcgbGlzdCB3aXRoIHRoZSB2YWx1ZSBhdCBpbmRleCB1cGRhdGVkIGJ5XG4gKiB0aGUgdXBkYXRlci5cbiAqXG4gKiBAbmFtZSBsaXN0LnVwZGF0ZVxuICogQHBhcmFtICB7TGlzdH0gbCBzZXQgdmFsdWUgb25cbiAqIEBwYXJhbSAge2FueX0gIGsgaXMgdGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0XG4gKiBAcGFyYW0gIHtGdW5jfSBmIHRvIHVwZGF0ZSB2YWx1ZSBvbiBtYXBcbiAqIEByZXR1cm4ge0xpc3R9IGNvcHkgb2YgbGlzdCB2YWx1ZSBhIGsgdXBkYXRlZCBieSBmXG4gKiBAc2luY2UgMC4wLjFcbiAqL1xuZXhwb3J0IGNvbnN0IHVwZGF0ZTogKGw6IExpc3QsIGs6IGFueSwgZjogRnVuYykgPT4gTGlzdCA9XG4gIChsLCBrLCBmKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IFsgLi4ubC5fX2RhdGFfXyBdXG5cbiAgICBkYXRhW2tdID0gZihkYXRhW2tdKVxuXG4gICAgcmV0dXJuIG9mKGRhdGEpXG4gIH1cblxuXG5leHBvcnQgZGVmYXVsdCBjdXJyeSh1cGRhdGUpXG4iXX0=