{"version":3,"sources":["del.js"],"names":["del","l","i","__data__","slice"],"mappings":";;;;;;;AAEA;;AACA;;;;AAGA;;;;;;;;;AASO,IAAMA,oBACX,SADWA,GACX,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,YAAG,6BAAKD,EAAEE,QAAP,GAAkBC,KAAlB,CAAwBF,CAAxB,EAA2B,CAA3B,CAAH,CAAV;AAAA,CADK;;kBAIQ,kBAAMF,GAAN,C","file":"del.js","sourceRoot":"/Users/leon/Development/Javascript/immut/source/list","sourcesContent":["// @flow\nimport type { List } from '../consts/types'\nimport { curry }     from '../utils/curry'\nimport { of }        from './of'\n\n\n/**\n * takes a list and an index and returns a new list\n * with the entity at the index removed.\n *\n * @name list.del\n * @param  {List} l to delete value from\n * @return {List} i index to delete the value at\n * @since 0.0.3\n */\nexport const del: (l: List, i: number) => List =\n  (l, i) => of([ ...l.__data__ ].slice(i, 1))\n\n\nexport default curry(del)\n"]}