{"version":3,"sources":["sort.spec.js"],"names":["t","is","l","__data__","f","__type__","list","Spy","spy","Array","prototype","sort","true","calledWith"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAIA,mBAAK,gCAAL,EAAuC,aAAK;AAC1CA,IAAEC,EAAF,CAAK,6BAAL;AACD,CAFD;;AAKA,mBAAK,sCAAL,EAA6C,aAAK;AAChD,MAAMC,IAAI;AACRC,cAAU;AADF,GAAV;;AAIAH,IAAEC,EAAF,CAAK,oBAAKC,CAAL,EAAQ;AAAA,WAAKE,CAAL;AAAA,GAAR,EAAgBC,QAArB,EAA+B,kBAAQC,IAAvC;AACD,CAND;;AASA,mBAAK,yDAAL,EAAgE,aAAK;AAAA;;AACnE,MAAMF,IAAI,SAAJA,CAAI;AAAA,WAAM,KAAK,CAAL,IAAU,CAAC,CAAjB;AAAA,GAAV;AACA,MAAMF,IAAI;AACRC,cAAU;AADF,GAAV;;AAIA,MAAMI,MAAM,gBAAMC,GAAN,CAAUC,MAAMC,SAAN,CAAgBC,IAA1B,EAAgC,MAAhC,CAAZ;;AAEA,sBAAKT,CAAL,EAAQE,CAAR;;AAEAJ,IAAEY,IAAF,uBAAO,6CAAIC,UAAJ,YAAe,gDAAEV,QAAjB,yCAA2BC,CAA3B,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAXD","file":"sort.spec.js","sourcesContent":["import test from 'ava'\n\nimport Sinon from 'sinon'\n\nimport symbols from '../../source/consts/symbols'\nimport sort  from '../../source/list/sort'\n\nimport {\n  _,\n} from '../../source/utils/curry.js'\n\ntest('list#sort: should be curryable', t => {\n  t.is(sort(_), sort)\n})\n\n\ntest('list#sort: should return a list type', t => {\n  const l = {\n    __data__: []\n  }\n\n  t.is(sort(l, f => f).__type__, symbols.list)\n})\n\n\ntest('list#sort: should call Array.prototype.sort w/ __data__', t => {\n  const f = () => 1 || 0 || -1\n  const l = {\n    __data__: []\n  }\n\n  const Spy = Sinon.spy(Array.prototype.sort, 'call')\n\n  sort(l, f)\n\n  t.true(Spy.calledWith(l.__data__, f))\n})\n"]}