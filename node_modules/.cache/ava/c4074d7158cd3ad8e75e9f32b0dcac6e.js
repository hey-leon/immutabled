'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _map = require('../../source/map');

var _map2 = _interopRequireDefault(_map);

var _symbols = require('../../source/consts/symbols');

var _symbols2 = _interopRequireDefault(_symbols);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('exports: type is symbols.map', function (t) {
  var _rec = new _powerAssertRecorder();

  t.true(_rec._expr(_rec._capt(_rec._capt(_rec._capt(_map2.default, 'arguments/0/left/object').type, 'arguments/0/left') === _rec._capt(_rec._capt(_symbols2.default, 'arguments/0/right/object').map, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.type === symbols.map)',
    filepath: 'tests/map/index.spec.js',
    line: 9,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"===","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"type","range":[11,15]},"computed":false,"range":[7,15]},"right":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[20,27]},"property":{"type":"Identifier","name":"map","range":[28,31]},"computed":false,"range":[20,31]},"range":[7,31]}],"range":[0,32]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"type","range":[11,15]},{"type":{"label":"==/!="},"value":"===","range":[16,19]},{"type":{"label":"name"},"value":"symbols","range":[20,27]},{"type":{"label":"."},"range":[27,28]},{"type":{"label":"name"},"value":"map","range":[28,31]},{"type":{"label":")"},"range":[31,32]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: of is included', function (t) {
  var _rec2 = new _powerAssertRecorder();

  t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_map2.default, 'arguments/0/left/object').of, 'arguments/0/left') instanceof _rec2._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.of instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 14,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"of","range":[11,13]},"computed":false,"range":[7,13]},"right":{"type":"Identifier","name":"Function","range":[25,33]},"range":[7,33]}],"range":[0,34]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"of","range":[11,13]},{"type":{"label":"instanceof"},"value":"instanceof","range":[14,24]},{"type":{"label":"name"},"value":"Function","range":[25,33]},{"type":{"label":")"},"range":[33,34]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: apply is included', function (t) {
  var _rec3 = new _powerAssertRecorder();

  t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_map2.default, 'arguments/0/left/object').apply, 'arguments/0/left') instanceof _rec3._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.apply instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 19,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"apply","range":[11,16]},"computed":false,"range":[7,16]},"right":{"type":"Identifier","name":"Function","range":[28,36]},"range":[7,36]}],"range":[0,37]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"apply","range":[11,16]},{"type":{"label":"instanceof"},"value":"instanceof","range":[17,27]},{"type":{"label":"name"},"value":"Function","range":[28,36]},{"type":{"label":")"},"range":[36,37]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: size is included', function (t) {
  var _rec4 = new _powerAssertRecorder();

  t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_map2.default, 'arguments/0/left/object').size, 'arguments/0/left') instanceof _rec4._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.size instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 24,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"size","range":[11,15]},"computed":false,"range":[7,15]},"right":{"type":"Identifier","name":"Function","range":[27,35]},"range":[7,35]}],"range":[0,36]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"size","range":[11,15]},{"type":{"label":"instanceof"},"value":"instanceof","range":[16,26]},{"type":{"label":"name"},"value":"Function","range":[27,35]},{"type":{"label":")"},"range":[35,36]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: data is included', function (t) {
  var _rec5 = new _powerAssertRecorder();

  t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_map2.default, 'arguments/0/left/object').data, 'arguments/0/left') instanceof _rec5._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.data instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 29,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"data","range":[11,15]},"computed":false,"range":[7,15]},"right":{"type":"Identifier","name":"Function","range":[27,35]},"range":[7,35]}],"range":[0,36]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"data","range":[11,15]},{"type":{"label":"instanceof"},"value":"instanceof","range":[16,26]},{"type":{"label":"name"},"value":"Function","range":[27,35]},{"type":{"label":")"},"range":[35,36]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: get is included', function (t) {
  var _rec6 = new _powerAssertRecorder();

  t.true(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_map2.default, 'arguments/0/left/object').get, 'arguments/0/left') instanceof _rec6._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.get instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 34,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"get","range":[11,14]},"computed":false,"range":[7,14]},"right":{"type":"Identifier","name":"Function","range":[26,34]},"range":[7,34]}],"range":[0,35]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"get","range":[11,14]},{"type":{"label":"instanceof"},"value":"instanceof","range":[15,25]},{"type":{"label":"name"},"value":"Function","range":[26,34]},{"type":{"label":")"},"range":[34,35]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: set is included', function (t) {
  var _rec7 = new _powerAssertRecorder();

  t.true(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(_map2.default, 'arguments/0/left/object').set, 'arguments/0/left') instanceof _rec7._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.set instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 39,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"set","range":[11,14]},"computed":false,"range":[7,14]},"right":{"type":"Identifier","name":"Function","range":[26,34]},"range":[7,34]}],"range":[0,35]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"set","range":[11,14]},{"type":{"label":"instanceof"},"value":"instanceof","range":[15,25]},{"type":{"label":"name"},"value":"Function","range":[26,34]},{"type":{"label":")"},"range":[34,35]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: update is included', function (t) {
  var _rec8 = new _powerAssertRecorder();

  t.true(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(_map2.default, 'arguments/0/left/object').update, 'arguments/0/left') instanceof _rec8._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.update instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 44,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"update","range":[11,17]},"computed":false,"range":[7,17]},"right":{"type":"Identifier","name":"Function","range":[29,37]},"range":[7,37]}],"range":[0,38]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"update","range":[11,17]},{"type":{"label":"instanceof"},"value":"instanceof","range":[18,28]},{"type":{"label":"name"},"value":"Function","range":[29,37]},{"type":{"label":")"},"range":[37,38]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: merge is included', function (t) {
  var _rec9 = new _powerAssertRecorder();

  t.true(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(_map2.default, 'arguments/0/left/object').merge, 'arguments/0/left') instanceof _rec9._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.merge instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 49,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"merge","range":[11,16]},"computed":false,"range":[7,16]},"right":{"type":"Identifier","name":"Function","range":[28,36]},"range":[7,36]}],"range":[0,37]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"merge","range":[11,16]},{"type":{"label":"instanceof"},"value":"instanceof","range":[17,27]},{"type":{"label":"name"},"value":"Function","range":[28,36]},{"type":{"label":")"},"range":[36,37]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: partition is included', function (t) {
  var _rec10 = new _powerAssertRecorder();

  t.true(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(_map2.default, 'arguments/0/left/object').partition, 'arguments/0/left') instanceof _rec10._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.partition instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 54,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"partition","range":[11,20]},"computed":false,"range":[7,20]},"right":{"type":"Identifier","name":"Function","range":[32,40]},"range":[7,40]}],"range":[0,41]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"partition","range":[11,20]},{"type":{"label":"instanceof"},"value":"instanceof","range":[21,31]},{"type":{"label":"name"},"value":"Function","range":[32,40]},{"type":{"label":")"},"range":[40,41]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: pluck is included', function (t) {
  var _rec11 = new _powerAssertRecorder();

  t.true(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(_map2.default, 'arguments/0/left/object').pluck, 'arguments/0/left') instanceof _rec11._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map.pluck instanceof Function)',
    filepath: 'tests/map/index.spec.js',
    line: 59,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"map","range":[7,10]},"property":{"type":"Identifier","name":"pluck","range":[11,16]},"computed":false,"range":[7,16]},"right":{"type":"Identifier","name":"Function","range":[28,36]},"range":[7,36]}],"range":[0,37]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"."},"range":[10,11]},{"type":{"label":"name"},"value":"pluck","range":[11,16]},{"type":{"label":"instanceof"},"value":"instanceof","range":[17,27]},{"type":{"label":"name"},"value":"Function","range":[28,36]},{"type":{"label":")"},"range":[36,37]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});
//# sourceMappingURL=../../node_modules/.cache/ava/c4074d7158cd3ad8e75e9f32b0dcac6e.js.map