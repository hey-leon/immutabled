{"version":3,"sources":["set.spec.js"],"names":["t","is","k","v","l1","__data__","__size__","l2","true","undefined","v1","v2"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;AAIA;;;;AAEA,mBAAK,+BAAL,EAAsC,aAAK;AACzCA,IAAEC,EAAF,CAAK,4BAAL;AACD,CAFD;;AAKA,mBAAK,gCAAL,EAAuC,aAAK;AAAA;;AAC1C,MAAMC,IAAI,CAAV;AACA,MAAMC,IAAI,OAAV;;AAEA,MAAMC,KAAK;AACTC,cAAU,EADD;AAETC,cAAU;AAFD,GAAX;;AAKA,MAAMC,KAAK,mBAAIH,EAAJ,EAAQF,CAAR,EAAWC,CAAX,CAAX;;AAEAH,IAAEQ,IAAF,uBAAO,kCAASJ,EAAT,yCAAaG,EAAb,yCAAiB,YAACL,CAAD,wCAAjB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAF,IAAEC,EAAF,CAAKG,GAAGC,QAAH,CAAYH,CAAZ,CAAL,EAAqBO,SAArB;AACAT,IAAEC,EAAF,CAAKM,GAAGF,QAAH,CAAYH,CAAZ,CAAL,EAAqBC,CAArB;AACAH,IAAEC,EAAF,CAAKM,GAAGD,QAAR,EAAkBF,GAAGE,QAAH,GAAc,CAAhC;AACD,CAfD;;AAkBA,mBAAK,kCAAL,EAAyC,aAAK;AAAA;;AAC5C,MAAMJ,IAAK,CAAX;AACA,MAAMQ,KAAK,QAAX;AACA,MAAMC,KAAK,QAAX;;AAEA,MAAMP,KAAK;AACTC,cAAU,CAAEK,EAAF,CADD;AAETJ,cAAU;AAFD,GAAX;;AAKA,MAAMC,KAAK,mBAAIH,EAAJ,EAAQF,CAAR,EAAWS,EAAX,CAAX;;AAEAX,IAAEQ,IAAF,yBAAO,mCAASJ,EAAT,0CAAaG,EAAb,0CAAiB,aAACL,CAAD,wCAAjB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAF,IAAEC,EAAF,CAAKG,GAAGC,QAAH,CAAYH,CAAZ,CAAL,EAAqBQ,EAArB;AACAV,IAAEC,EAAF,CAAKM,GAAGF,QAAH,CAAYH,CAAZ,CAAL,EAAqBS,EAArB;AACAX,IAAEC,EAAF,CAAKM,GAAGD,QAAR,EAAkBF,GAAGE,QAArB;AACD,CAhBD","file":"set.spec.js","sourcesContent":["import test from 'ava'\n\nimport set from '../../source/list/set'\n\nimport {\n  _,\n} from '../../source/utils/curry'\n\nimport { testRefs } from '../helpers'\n\ntest('list#set: should be curryable', t => {\n  t.is(set(_), set)\n})\n\n\ntest('list#set: should set new value', t => {\n  const k = 0\n  const v = 'value'\n\n  const l1 = {\n    __data__: [],\n    __size__: 0,\n  }\n\n  const l2 = set(l1, k, v)\n\n  t.true(testRefs(l1, l2, [k]))\n  t.is(l1.__data__[k], undefined)\n  t.is(l2.__data__[k], v)\n  t.is(l2.__size__, l1.__size__ + 1)\n})\n\n\ntest('list#set: should overwrite value', t => {\n  const k  = 0\n  const v1 = 'value1'\n  const v2 = 'value2'\n\n  const l1 = {\n    __data__: [ v1 ],\n    __size__: 1,\n  }\n\n  const l2 = set(l1, k, v2)\n\n  t.true(testRefs(l1, l2, [k]))\n  t.is(l1.__data__[k], v1)\n  t.is(l2.__data__[k], v2)\n  t.is(l2.__size__, l1.__size__)\n})\n"]}