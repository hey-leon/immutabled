{"version":3,"sources":["fold.spec.js"],"names":["t","is","f","acc","i","l","__data__","Spy","spy","Array","prototype","reduce","true","calledWith"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;;;AAEA;;;;AAIA,mBAAK,gCAAL,EAAuC,aAAK;AAC1CA,IAAEC,EAAF,CAAK,6BAAL;AACD,CAFD;;AAKA,mBAAK,2DAAL,EAAkE,aAAK;AAAA;;AACrE,MAAMC,IAAI,SAAJA,CAAI,CAACC,GAAD,EAAMC,CAAN;AAAA,WAAYA,CAAZ;AAAA,GAAV;AACA,MAAMC,IAAI;AACRC,cAAU;AADF,GAAV;AAGA,MAAMF,IAAI,CAAV;;AAEA,MAAMG,MAAM,gBAAMC,GAAN,CAAUC,MAAMC,SAAN,CAAgBC,MAA1B,EAAkC,MAAlC,CAAZ;;AAEA,sBAAKN,CAAL,EAAQH,CAAR,EAAWE,CAAX;;AAEAJ,IAAEY,IAAF,uBAAO,6CAAIC,UAAJ,YAAe,gDAAEP,QAAjB,yCAA2BJ,CAA3B,yCAA8BE,CAA9B,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAZD","file":"fold.spec.js","sourcesContent":["import test from 'ava'\n\nimport Sinon from 'sinon'\n\nimport fold    from '../../source/list/fold'\n\nimport {\n  _,\n} from '../../source/utils/curry.js'\n\ntest('list#fold: should be curryable', t => {\n  t.is(fold(_), fold)\n})\n\n\ntest('list#fold: should call Array.prototype.reduce w/ __data__', t => {\n  const f = (acc, i) => i\n  const l = {\n    __data__: [],\n  }\n  const i = 0\n\n  const Spy = Sinon.spy(Array.prototype.reduce, 'call')\n\n  fold(l, f, i)\n\n  t.true(Spy.calledWith(l.__data__, f, i))\n})\n"]}