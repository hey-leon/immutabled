'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _symbols = require('../../source/consts/symbols');

var _symbols2 = _interopRequireDefault(_symbols);

var _is = require('../../source/utils/is');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('#isImmut: should only return true for immut tyoes', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder();

  t.false(_rec._expr(_rec._capt((0, _is.isImmut)(), 'arguments/0'), {
    content: 't.false(isImmut())',
    filepath: 'tests/utils/is.spec.js',
    line: 16,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[8,15]},"arguments":[],"range":[8,17]}],"range":[0,18]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isImmut","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":")"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec2._expr(_rec2._capt((0, _is.isImmut)(null), 'arguments/0'), {
    content: 't.false(isImmut(null))',
    filepath: 'tests/utils/is.spec.js',
    line: 17,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[8,15]},"arguments":[{"type":"NullLiteral","range":[16,20]}],"range":[8,21]}],"range":[0,22]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isImmut","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"null"},"value":"null","range":[16,20]},{"type":{"label":")"},"range":[20,21]},{"type":{"label":")"},"range":[21,22]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec3._expr(_rec3._capt((0, _is.isImmut)(1), 'arguments/0'), {
    content: 't.false(isImmut(1))',
    filepath: 'tests/utils/is.spec.js',
    line: 18,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[8,15]},"arguments":[{"type":"NumericLiteral","value":1,"range":[16,17]}],"range":[8,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isImmut","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"num"},"value":1,"range":[16,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec4._expr(_rec4._capt((0, _is.isImmut)(''), 'arguments/0'), {
    content: 't.false(isImmut(\'\'))',
    filepath: 'tests/utils/is.spec.js',
    line: 19,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[8,15]},"arguments":[{"type":"StringLiteral","value":"","range":[16,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isImmut","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"string"},"value":"","range":[16,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec5._expr(_rec5._capt((0, _is.isImmut)(_rec5._capt(NaN, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isImmut(NaN))',
    filepath: 'tests/utils/is.spec.js',
    line: 20,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[8,15]},"arguments":[{"type":"Identifier","name":"NaN","range":[16,19]}],"range":[8,20]}],"range":[0,21]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isImmut","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"name"},"value":"NaN","range":[16,19]},{"type":{"label":")"},"range":[19,20]},{"type":{"label":")"},"range":[20,21]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec6._expr(_rec6._capt((0, _is.isImmut)(_rec6._capt([], 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isImmut([]))',
    filepath: 'tests/utils/is.spec.js',
    line: 21,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[8,15]},"arguments":[{"type":"ArrayExpression","elements":[],"range":[16,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isImmut","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"["},"range":[16,17]},{"type":{"label":"]"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec7._expr(_rec7._capt((0, _is.isImmut)(_rec7._capt({}, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isImmut({}))',
    filepath: 'tests/utils/is.spec.js',
    line: 22,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[8,15]},"arguments":[{"type":"ObjectExpression","properties":[],"range":[16,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isImmut","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"{"},"range":[16,17]},{"type":{"label":"}"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec8._expr(_rec8._capt((0, _is.isImmut)(_rec8._capt({ __type__: _rec8._capt(_rec8._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').map, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isImmut({ __type__: symbols.map }))',
    filepath: 'tests/utils/is.spec.js',
    line: 23,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[7,14]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[17,25]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[27,34]},"property":{"type":"Identifier","name":"map","range":[35,38]},"computed":false,"range":[27,38]},"computed":false,"shorthand":false,"range":[17,38]}],"range":[15,40]}],"range":[7,41]}],"range":[0,42]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isImmut","range":[7,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"{"},"range":[15,16]},{"type":{"label":"name"},"value":"__type__","range":[17,25]},{"type":{"label":":"},"range":[25,26]},{"type":{"label":"name"},"value":"symbols","range":[27,34]},{"type":{"label":"."},"range":[34,35]},{"type":{"label":"name"},"value":"map","range":[35,38]},{"type":{"label":"}"},"range":[39,40]},{"type":{"label":")"},"range":[40,41]},{"type":{"label":")"},"range":[41,42]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec9._expr(_rec9._capt((0, _is.isImmut)(_rec9._capt({ __type__: _rec9._capt(_rec9._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').list, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isImmut({ __type__: symbols.list }))',
    filepath: 'tests/utils/is.spec.js',
    line: 24,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isImmut","range":[7,14]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[17,25]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[27,34]},"property":{"type":"Identifier","name":"list","range":[35,39]},"computed":false,"range":[27,39]},"computed":false,"shorthand":false,"range":[17,39]}],"range":[15,41]}],"range":[7,42]}],"range":[0,43]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isImmut","range":[7,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"{"},"range":[15,16]},{"type":{"label":"name"},"value":"__type__","range":[17,25]},{"type":{"label":":"},"range":[25,26]},{"type":{"label":"name"},"value":"symbols","range":[27,34]},{"type":{"label":"."},"range":[34,35]},{"type":{"label":"name"},"value":"list","range":[35,39]},{"type":{"label":"}"},"range":[40,41]},{"type":{"label":")"},"range":[41,42]},{"type":{"label":")"},"range":[42,43]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('#isList: should only return true for list', function (t) {
  var _rec10 = new _powerAssertRecorder(),
      _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder(),
      _rec13 = new _powerAssertRecorder(),
      _rec14 = new _powerAssertRecorder(),
      _rec15 = new _powerAssertRecorder(),
      _rec16 = new _powerAssertRecorder(),
      _rec17 = new _powerAssertRecorder(),
      _rec18 = new _powerAssertRecorder();

  t.false(_rec10._expr(_rec10._capt((0, _is.isList)(), 'arguments/0'), {
    content: 't.false(isList())',
    filepath: 'tests/utils/is.spec.js',
    line: 29,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[],"range":[8,16]}],"range":[0,17]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":")"},"range":[15,16]},{"type":{"label":")"},"range":[16,17]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec11._expr(_rec11._capt((0, _is.isList)(null), 'arguments/0'), {
    content: 't.false(isList(null))',
    filepath: 'tests/utils/is.spec.js',
    line: 30,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[{"type":"NullLiteral","range":[15,19]}],"range":[8,20]}],"range":[0,21]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"null"},"value":"null","range":[15,19]},{"type":{"label":")"},"range":[19,20]},{"type":{"label":")"},"range":[20,21]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec12._expr(_rec12._capt((0, _is.isList)(1), 'arguments/0'), {
    content: 't.false(isList(1))',
    filepath: 'tests/utils/is.spec.js',
    line: 31,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[{"type":"NumericLiteral","value":1,"range":[15,16]}],"range":[8,17]}],"range":[0,18]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"num"},"value":1,"range":[15,16]},{"type":{"label":")"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec13._expr(_rec13._capt((0, _is.isList)(''), 'arguments/0'), {
    content: 't.false(isList(\'\'))',
    filepath: 'tests/utils/is.spec.js',
    line: 32,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[{"type":"StringLiteral","value":"","range":[15,17]}],"range":[8,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"string"},"value":"","range":[15,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec14._expr(_rec14._capt((0, _is.isList)(_rec14._capt(NaN, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isList(NaN))',
    filepath: 'tests/utils/is.spec.js',
    line: 33,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[{"type":"Identifier","name":"NaN","range":[15,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"name"},"value":"NaN","range":[15,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec15._expr(_rec15._capt((0, _is.isList)(_rec15._capt([], 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isList([]))',
    filepath: 'tests/utils/is.spec.js',
    line: 34,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[{"type":"ArrayExpression","elements":[],"range":[15,17]}],"range":[8,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"["},"range":[15,16]},{"type":{"label":"]"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec16._expr(_rec16._capt((0, _is.isList)(_rec16._capt({}, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isList({}))',
    filepath: 'tests/utils/is.spec.js',
    line: 35,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[{"type":"ObjectExpression","properties":[],"range":[15,17]}],"range":[8,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"{"},"range":[15,16]},{"type":{"label":"}"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec17._expr(_rec17._capt((0, _is.isList)(_rec17._capt({ __type__: _rec17._capt(_rec17._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').map, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isList({ __type__: symbols.map }))',
    filepath: 'tests/utils/is.spec.js',
    line: 36,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[8,14]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[17,25]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[27,34]},"property":{"type":"Identifier","name":"map","range":[35,38]},"computed":false,"range":[27,38]},"computed":false,"shorthand":false,"range":[17,38]}],"range":[15,40]}],"range":[8,41]}],"range":[0,42]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isList","range":[8,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"{"},"range":[15,16]},{"type":{"label":"name"},"value":"__type__","range":[17,25]},{"type":{"label":":"},"range":[25,26]},{"type":{"label":"name"},"value":"symbols","range":[27,34]},{"type":{"label":"."},"range":[34,35]},{"type":{"label":"name"},"value":"map","range":[35,38]},{"type":{"label":"}"},"range":[39,40]},{"type":{"label":")"},"range":[40,41]},{"type":{"label":")"},"range":[41,42]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec18._expr(_rec18._capt((0, _is.isList)(_rec18._capt({ __type__: _rec18._capt(_rec18._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').list, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isList({ __type__: symbols.list }))',
    filepath: 'tests/utils/is.spec.js',
    line: 37,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isList","range":[7,13]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[16,24]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[26,33]},"property":{"type":"Identifier","name":"list","range":[34,38]},"computed":false,"range":[26,38]},"computed":false,"shorthand":false,"range":[16,38]}],"range":[14,40]}],"range":[7,41]}],"range":[0,42]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isList","range":[7,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"{"},"range":[14,15]},{"type":{"label":"name"},"value":"__type__","range":[16,24]},{"type":{"label":":"},"range":[24,25]},{"type":{"label":"name"},"value":"symbols","range":[26,33]},{"type":{"label":"."},"range":[33,34]},{"type":{"label":"name"},"value":"list","range":[34,38]},{"type":{"label":"}"},"range":[39,40]},{"type":{"label":")"},"range":[40,41]},{"type":{"label":")"},"range":[41,42]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('#isMap: should only return true for map', function (t) {
  var _rec19 = new _powerAssertRecorder(),
      _rec20 = new _powerAssertRecorder(),
      _rec21 = new _powerAssertRecorder(),
      _rec22 = new _powerAssertRecorder(),
      _rec23 = new _powerAssertRecorder(),
      _rec24 = new _powerAssertRecorder(),
      _rec25 = new _powerAssertRecorder(),
      _rec26 = new _powerAssertRecorder(),
      _rec27 = new _powerAssertRecorder();

  t.false(_rec19._expr(_rec19._capt((0, _is.isMap)(), 'arguments/0'), {
    content: 't.false(isMap())',
    filepath: 'tests/utils/is.spec.js',
    line: 42,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[],"range":[8,15]}],"range":[0,16]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":")"},"range":[14,15]},{"type":{"label":")"},"range":[15,16]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec20._expr(_rec20._capt((0, _is.isMap)(null), 'arguments/0'), {
    content: 't.false(isMap(null))',
    filepath: 'tests/utils/is.spec.js',
    line: 43,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[{"type":"NullLiteral","range":[14,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"null"},"value":"null","range":[14,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec21._expr(_rec21._capt((0, _is.isMap)(1), 'arguments/0'), {
    content: 't.false(isMap(1))',
    filepath: 'tests/utils/is.spec.js',
    line: 44,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[{"type":"NumericLiteral","value":1,"range":[14,15]}],"range":[8,16]}],"range":[0,17]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"num"},"value":1,"range":[14,15]},{"type":{"label":")"},"range":[15,16]},{"type":{"label":")"},"range":[16,17]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec22._expr(_rec22._capt((0, _is.isMap)(''), 'arguments/0'), {
    content: 't.false(isMap(\'\'))',
    filepath: 'tests/utils/is.spec.js',
    line: 45,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[{"type":"StringLiteral","value":"","range":[14,16]}],"range":[8,17]}],"range":[0,18]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"string"},"value":"","range":[14,16]},{"type":{"label":")"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec23._expr(_rec23._capt((0, _is.isMap)(_rec23._capt(NaN, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isMap(NaN))',
    filepath: 'tests/utils/is.spec.js',
    line: 46,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[{"type":"Identifier","name":"NaN","range":[14,17]}],"range":[8,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"name"},"value":"NaN","range":[14,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec24._expr(_rec24._capt((0, _is.isMap)(_rec24._capt([], 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isMap([]))',
    filepath: 'tests/utils/is.spec.js',
    line: 47,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[{"type":"ArrayExpression","elements":[],"range":[14,16]}],"range":[8,17]}],"range":[0,18]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"["},"range":[14,15]},{"type":{"label":"]"},"range":[15,16]},{"type":{"label":")"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec25._expr(_rec25._capt((0, _is.isMap)(_rec25._capt({}, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isMap({}))',
    filepath: 'tests/utils/is.spec.js',
    line: 48,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[{"type":"ObjectExpression","properties":[],"range":[14,16]}],"range":[8,17]}],"range":[0,18]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"{"},"range":[14,15]},{"type":{"label":"}"},"range":[15,16]},{"type":{"label":")"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec26._expr(_rec26._capt((0, _is.isMap)(_rec26._capt({ __type__: _rec26._capt(_rec26._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').list, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isMap({ __type__: symbols.list }))',
    filepath: 'tests/utils/is.spec.js',
    line: 49,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[8,13]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[16,24]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[26,33]},"property":{"type":"Identifier","name":"list","range":[34,38]},"computed":false,"range":[26,38]},"computed":false,"shorthand":false,"range":[16,38]}],"range":[14,40]}],"range":[8,41]}],"range":[0,42]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isMap","range":[8,13]},{"type":{"label":"("},"range":[13,14]},{"type":{"label":"{"},"range":[14,15]},{"type":{"label":"name"},"value":"__type__","range":[16,24]},{"type":{"label":":"},"range":[24,25]},{"type":{"label":"name"},"value":"symbols","range":[26,33]},{"type":{"label":"."},"range":[33,34]},{"type":{"label":"name"},"value":"list","range":[34,38]},{"type":{"label":"}"},"range":[39,40]},{"type":{"label":")"},"range":[40,41]},{"type":{"label":")"},"range":[41,42]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec27._expr(_rec27._capt((0, _is.isMap)(_rec27._capt({ __type__: _rec27._capt(_rec27._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').map, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isMap({ __type__: symbols.map }))',
    filepath: 'tests/utils/is.spec.js',
    line: 50,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isMap","range":[7,12]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[15,23]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[25,32]},"property":{"type":"Identifier","name":"map","range":[33,36]},"computed":false,"range":[25,36]},"computed":false,"shorthand":false,"range":[15,36]}],"range":[13,38]}],"range":[7,39]}],"range":[0,40]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isMap","range":[7,12]},{"type":{"label":"("},"range":[12,13]},{"type":{"label":"{"},"range":[13,14]},{"type":{"label":"name"},"value":"__type__","range":[15,23]},{"type":{"label":":"},"range":[23,24]},{"type":{"label":"name"},"value":"symbols","range":[25,32]},{"type":{"label":"."},"range":[32,33]},{"type":{"label":"name"},"value":"map","range":[33,36]},{"type":{"label":"}"},"range":[37,38]},{"type":{"label":")"},"range":[38,39]},{"type":{"label":")"},"range":[39,40]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('#isArray: should only return true for array', function (t) {
  var _rec28 = new _powerAssertRecorder(),
      _rec29 = new _powerAssertRecorder(),
      _rec30 = new _powerAssertRecorder(),
      _rec31 = new _powerAssertRecorder(),
      _rec32 = new _powerAssertRecorder(),
      _rec33 = new _powerAssertRecorder(),
      _rec34 = new _powerAssertRecorder(),
      _rec35 = new _powerAssertRecorder(),
      _rec36 = new _powerAssertRecorder();

  t.false(_rec28._expr(_rec28._capt((0, _is.isArray)(), 'arguments/0'), {
    content: 't.false(isArray())',
    filepath: 'tests/utils/is.spec.js',
    line: 55,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[],"range":[8,17]}],"range":[0,18]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":")"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec29._expr(_rec29._capt((0, _is.isArray)(null), 'arguments/0'), {
    content: 't.false(isArray(null))',
    filepath: 'tests/utils/is.spec.js',
    line: 56,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[{"type":"NullLiteral","range":[16,20]}],"range":[8,21]}],"range":[0,22]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"null"},"value":"null","range":[16,20]},{"type":{"label":")"},"range":[20,21]},{"type":{"label":")"},"range":[21,22]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec30._expr(_rec30._capt((0, _is.isArray)(1), 'arguments/0'), {
    content: 't.false(isArray(1))',
    filepath: 'tests/utils/is.spec.js',
    line: 57,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[{"type":"NumericLiteral","value":1,"range":[16,17]}],"range":[8,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"num"},"value":1,"range":[16,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec31._expr(_rec31._capt((0, _is.isArray)(''), 'arguments/0'), {
    content: 't.false(isArray(\'\'))',
    filepath: 'tests/utils/is.spec.js',
    line: 58,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[{"type":"StringLiteral","value":"","range":[16,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"string"},"value":"","range":[16,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec32._expr(_rec32._capt((0, _is.isArray)(_rec32._capt(NaN, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isArray(NaN))',
    filepath: 'tests/utils/is.spec.js',
    line: 59,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[{"type":"Identifier","name":"NaN","range":[16,19]}],"range":[8,20]}],"range":[0,21]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"name"},"value":"NaN","range":[16,19]},{"type":{"label":")"},"range":[19,20]},{"type":{"label":")"},"range":[20,21]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec33._expr(_rec33._capt((0, _is.isArray)(_rec33._capt({}, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isArray({}))',
    filepath: 'tests/utils/is.spec.js',
    line: 60,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[{"type":"ObjectExpression","properties":[],"range":[16,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"{"},"range":[16,17]},{"type":{"label":"}"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec34._expr(_rec34._capt((0, _is.isArray)(_rec34._capt({ __type__: _rec34._capt(_rec34._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').list, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isArray({ __type__: symbols.list }))',
    filepath: 'tests/utils/is.spec.js',
    line: 61,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[18,26]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[28,35]},"property":{"type":"Identifier","name":"list","range":[36,40]},"computed":false,"range":[28,40]},"computed":false,"shorthand":false,"range":[18,40]}],"range":[16,42]}],"range":[8,43]}],"range":[0,44]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"{"},"range":[16,17]},{"type":{"label":"name"},"value":"__type__","range":[18,26]},{"type":{"label":":"},"range":[26,27]},{"type":{"label":"name"},"value":"symbols","range":[28,35]},{"type":{"label":"."},"range":[35,36]},{"type":{"label":"name"},"value":"list","range":[36,40]},{"type":{"label":"}"},"range":[41,42]},{"type":{"label":")"},"range":[42,43]},{"type":{"label":")"},"range":[43,44]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec35._expr(_rec35._capt((0, _is.isArray)(_rec35._capt({ __type__: _rec35._capt(_rec35._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').map, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isArray({ __type__: symbols.map }))',
    filepath: 'tests/utils/is.spec.js',
    line: 62,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[8,15]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[18,26]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[28,35]},"property":{"type":"Identifier","name":"map","range":[36,39]},"computed":false,"range":[28,39]},"computed":false,"shorthand":false,"range":[18,39]}],"range":[16,41]}],"range":[8,42]}],"range":[0,43]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isArray","range":[8,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"{"},"range":[16,17]},{"type":{"label":"name"},"value":"__type__","range":[18,26]},{"type":{"label":":"},"range":[26,27]},{"type":{"label":"name"},"value":"symbols","range":[28,35]},{"type":{"label":"."},"range":[35,36]},{"type":{"label":"name"},"value":"map","range":[36,39]},{"type":{"label":"}"},"range":[40,41]},{"type":{"label":")"},"range":[41,42]},{"type":{"label":")"},"range":[42,43]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec36._expr(_rec36._capt((0, _is.isArray)(_rec36._capt([], 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isArray([]))',
    filepath: 'tests/utils/is.spec.js',
    line: 63,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isArray","range":[7,14]},"arguments":[{"type":"ArrayExpression","elements":[],"range":[15,17]}],"range":[7,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isArray","range":[7,14]},{"type":{"label":"("},"range":[14,15]},{"type":{"label":"["},"range":[15,16]},{"type":{"label":"]"},"range":[16,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('#isObject: should only return true for object', function (t) {
  var _rec37 = new _powerAssertRecorder(),
      _rec38 = new _powerAssertRecorder(),
      _rec39 = new _powerAssertRecorder(),
      _rec40 = new _powerAssertRecorder(),
      _rec41 = new _powerAssertRecorder(),
      _rec42 = new _powerAssertRecorder(),
      _rec43 = new _powerAssertRecorder(),
      _rec44 = new _powerAssertRecorder(),
      _rec45 = new _powerAssertRecorder();

  t.false(_rec37._expr(_rec37._capt((0, _is.isObject)(), 'arguments/0'), {
    content: 't.false(isObject())',
    filepath: 'tests/utils/is.spec.js',
    line: 68,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[],"range":[8,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec38._expr(_rec38._capt((0, _is.isObject)(null), 'arguments/0'), {
    content: 't.false(isObject(null))',
    filepath: 'tests/utils/is.spec.js',
    line: 69,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[{"type":"NullLiteral","range":[17,21]}],"range":[8,22]}],"range":[0,23]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"null"},"value":"null","range":[17,21]},{"type":{"label":")"},"range":[21,22]},{"type":{"label":")"},"range":[22,23]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec39._expr(_rec39._capt((0, _is.isObject)(1), 'arguments/0'), {
    content: 't.false(isObject(1))',
    filepath: 'tests/utils/is.spec.js',
    line: 70,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[{"type":"NumericLiteral","value":1,"range":[17,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"num"},"value":1,"range":[17,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec40._expr(_rec40._capt((0, _is.isObject)(''), 'arguments/0'), {
    content: 't.false(isObject(\'\'))',
    filepath: 'tests/utils/is.spec.js',
    line: 71,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[{"type":"StringLiteral","value":"","range":[17,19]}],"range":[8,20]}],"range":[0,21]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"string"},"value":"","range":[17,19]},{"type":{"label":")"},"range":[19,20]},{"type":{"label":")"},"range":[20,21]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec41._expr(_rec41._capt((0, _is.isObject)(_rec41._capt(NaN, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isObject(NaN))',
    filepath: 'tests/utils/is.spec.js',
    line: 72,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[{"type":"Identifier","name":"NaN","range":[17,20]}],"range":[8,21]}],"range":[0,22]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"name"},"value":"NaN","range":[17,20]},{"type":{"label":")"},"range":[20,21]},{"type":{"label":")"},"range":[21,22]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec42._expr(_rec42._capt((0, _is.isObject)(_rec42._capt([], 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isObject([]))',
    filepath: 'tests/utils/is.spec.js',
    line: 73,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[{"type":"ArrayExpression","elements":[],"range":[17,19]}],"range":[8,20]}],"range":[0,21]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"["},"range":[17,18]},{"type":{"label":"]"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]},{"type":{"label":")"},"range":[20,21]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec43._expr(_rec43._capt((0, _is.isObject)(_rec43._capt({ __type__: _rec43._capt(_rec43._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').list, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isObject({ __type__: symbols.list }))',
    filepath: 'tests/utils/is.spec.js',
    line: 74,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[19,27]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[29,36]},"property":{"type":"Identifier","name":"list","range":[37,41]},"computed":false,"range":[29,41]},"computed":false,"shorthand":false,"range":[19,41]}],"range":[17,43]}],"range":[8,44]}],"range":[0,45]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"{"},"range":[17,18]},{"type":{"label":"name"},"value":"__type__","range":[19,27]},{"type":{"label":":"},"range":[27,28]},{"type":{"label":"name"},"value":"symbols","range":[29,36]},{"type":{"label":"."},"range":[36,37]},{"type":{"label":"name"},"value":"list","range":[37,41]},{"type":{"label":"}"},"range":[42,43]},{"type":{"label":")"},"range":[43,44]},{"type":{"label":")"},"range":[44,45]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec44._expr(_rec44._capt((0, _is.isObject)(_rec44._capt({ __type__: _rec44._capt(_rec44._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').map, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isObject({ __type__: symbols.map }))',
    filepath: 'tests/utils/is.spec.js',
    line: 75,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[8,16]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[19,27]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[29,36]},"property":{"type":"Identifier","name":"map","range":[37,40]},"computed":false,"range":[29,40]},"computed":false,"shorthand":false,"range":[19,40]}],"range":[17,42]}],"range":[8,43]}],"range":[0,44]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isObject","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"{"},"range":[17,18]},{"type":{"label":"name"},"value":"__type__","range":[19,27]},{"type":{"label":":"},"range":[27,28]},{"type":{"label":"name"},"value":"symbols","range":[29,36]},{"type":{"label":"."},"range":[36,37]},{"type":{"label":"name"},"value":"map","range":[37,40]},{"type":{"label":"}"},"range":[41,42]},{"type":{"label":")"},"range":[42,43]},{"type":{"label":")"},"range":[43,44]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec45._expr(_rec45._capt((0, _is.isObject)(_rec45._capt({}, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isObject({}))',
    filepath: 'tests/utils/is.spec.js',
    line: 76,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isObject","range":[7,15]},"arguments":[{"type":"ObjectExpression","properties":[],"range":[16,18]}],"range":[7,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isObject","range":[7,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"{"},"range":[16,17]},{"type":{"label":"}"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('#isPrimitive: should only return true for primitive', function (t) {
  var _rec46 = new _powerAssertRecorder(),
      _rec47 = new _powerAssertRecorder(),
      _rec48 = new _powerAssertRecorder(),
      _rec49 = new _powerAssertRecorder(),
      _rec50 = new _powerAssertRecorder(),
      _rec51 = new _powerAssertRecorder(),
      _rec52 = new _powerAssertRecorder(),
      _rec53 = new _powerAssertRecorder(),
      _rec54 = new _powerAssertRecorder();

  t.false(_rec46._expr(_rec46._capt((0, _is.isPrimitive)(), 'arguments/0'), {
    content: 't.false(isPrimitive())',
    filepath: 'tests/utils/is.spec.js',
    line: 81,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[8,19]},"arguments":[],"range":[8,21]}],"range":[0,22]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isPrimitive","range":[8,19]},{"type":{"label":"("},"range":[19,20]},{"type":{"label":")"},"range":[20,21]},{"type":{"label":")"},"range":[21,22]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec47._expr(_rec47._capt((0, _is.isPrimitive)(null), 'arguments/0'), {
    content: 't.false(isPrimitive(null))',
    filepath: 'tests/utils/is.spec.js',
    line: 82,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[8,19]},"arguments":[{"type":"NullLiteral","range":[20,24]}],"range":[8,25]}],"range":[0,26]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isPrimitive","range":[8,19]},{"type":{"label":"("},"range":[19,20]},{"type":{"label":"null"},"value":"null","range":[20,24]},{"type":{"label":")"},"range":[24,25]},{"type":{"label":")"},"range":[25,26]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec48._expr(_rec48._capt((0, _is.isPrimitive)(_rec48._capt([], 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isPrimitive([]))',
    filepath: 'tests/utils/is.spec.js',
    line: 83,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[8,19]},"arguments":[{"type":"ArrayExpression","elements":[],"range":[20,22]}],"range":[8,23]}],"range":[0,24]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isPrimitive","range":[8,19]},{"type":{"label":"("},"range":[19,20]},{"type":{"label":"["},"range":[20,21]},{"type":{"label":"]"},"range":[21,22]},{"type":{"label":")"},"range":[22,23]},{"type":{"label":")"},"range":[23,24]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec49._expr(_rec49._capt((0, _is.isPrimitive)(_rec49._capt({}, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isPrimitive({}))',
    filepath: 'tests/utils/is.spec.js',
    line: 84,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[8,19]},"arguments":[{"type":"ObjectExpression","properties":[],"range":[20,22]}],"range":[8,23]}],"range":[0,24]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isPrimitive","range":[8,19]},{"type":{"label":"("},"range":[19,20]},{"type":{"label":"{"},"range":[20,21]},{"type":{"label":"}"},"range":[21,22]},{"type":{"label":")"},"range":[22,23]},{"type":{"label":")"},"range":[23,24]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec50._expr(_rec50._capt((0, _is.isPrimitive)(_rec50._capt({ __type__: _rec50._capt(_rec50._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').list, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isPrimitive({ __type__: symbols.list }))',
    filepath: 'tests/utils/is.spec.js',
    line: 85,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[8,19]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[22,30]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[32,39]},"property":{"type":"Identifier","name":"list","range":[40,44]},"computed":false,"range":[32,44]},"computed":false,"shorthand":false,"range":[22,44]}],"range":[20,46]}],"range":[8,47]}],"range":[0,48]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isPrimitive","range":[8,19]},{"type":{"label":"("},"range":[19,20]},{"type":{"label":"{"},"range":[20,21]},{"type":{"label":"name"},"value":"__type__","range":[22,30]},{"type":{"label":":"},"range":[30,31]},{"type":{"label":"name"},"value":"symbols","range":[32,39]},{"type":{"label":"."},"range":[39,40]},{"type":{"label":"name"},"value":"list","range":[40,44]},{"type":{"label":"}"},"range":[45,46]},{"type":{"label":")"},"range":[46,47]},{"type":{"label":")"},"range":[47,48]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec51._expr(_rec51._capt((0, _is.isPrimitive)(_rec51._capt({ __type__: _rec51._capt(_rec51._capt(_symbols2.default, 'arguments/0/arguments/0/properties/0/value/object').map, 'arguments/0/arguments/0/properties/0/value') }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isPrimitive({ __type__: symbols.map }))',
    filepath: 'tests/utils/is.spec.js',
    line: 86,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[8,19]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"__type__","range":[22,30]},"value":{"type":"MemberExpression","object":{"type":"Identifier","name":"symbols","range":[32,39]},"property":{"type":"Identifier","name":"map","range":[40,43]},"computed":false,"range":[32,43]},"computed":false,"shorthand":false,"range":[22,43]}],"range":[20,45]}],"range":[8,46]}],"range":[0,47]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isPrimitive","range":[8,19]},{"type":{"label":"("},"range":[19,20]},{"type":{"label":"{"},"range":[20,21]},{"type":{"label":"name"},"value":"__type__","range":[22,30]},{"type":{"label":":"},"range":[30,31]},{"type":{"label":"name"},"value":"symbols","range":[32,39]},{"type":{"label":"."},"range":[39,40]},{"type":{"label":"name"},"value":"map","range":[40,43]},{"type":{"label":"}"},"range":[44,45]},{"type":{"label":")"},"range":[45,46]},{"type":{"label":")"},"range":[46,47]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec52._expr(_rec52._capt((0, _is.isPrimitive)(1), 'arguments/0'), {
    content: 't.true(isPrimitive(1))',
    filepath: 'tests/utils/is.spec.js',
    line: 87,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[7,18]},"arguments":[{"type":"NumericLiteral","value":1,"range":[19,20]}],"range":[7,21]}],"range":[0,22]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isPrimitive","range":[7,18]},{"type":{"label":"("},"range":[18,19]},{"type":{"label":"num"},"value":1,"range":[19,20]},{"type":{"label":")"},"range":[20,21]},{"type":{"label":")"},"range":[21,22]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec53._expr(_rec53._capt((0, _is.isPrimitive)(''), 'arguments/0'), {
    content: 't.true(isPrimitive(\'\'))',
    filepath: 'tests/utils/is.spec.js',
    line: 88,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[7,18]},"arguments":[{"type":"StringLiteral","value":"","range":[19,21]}],"range":[7,22]}],"range":[0,23]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isPrimitive","range":[7,18]},{"type":{"label":"("},"range":[18,19]},{"type":{"label":"string"},"value":"","range":[19,21]},{"type":{"label":")"},"range":[21,22]},{"type":{"label":")"},"range":[22,23]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec54._expr(_rec54._capt((0, _is.isPrimitive)(_rec54._capt(NaN, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isPrimitive(NaN))',
    filepath: 'tests/utils/is.spec.js',
    line: 89,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isPrimitive","range":[7,18]},"arguments":[{"type":"Identifier","name":"NaN","range":[19,22]}],"range":[7,23]}],"range":[0,24]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isPrimitive","range":[7,18]},{"type":{"label":"("},"range":[18,19]},{"type":{"label":"name"},"value":"NaN","range":[19,22]},{"type":{"label":")"},"range":[22,23]},{"type":{"label":")"},"range":[23,24]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});
//# sourceMappingURL=../../node_modules/.cache/ava/ffbba4534ba52447352abfbfa7191616.js.map