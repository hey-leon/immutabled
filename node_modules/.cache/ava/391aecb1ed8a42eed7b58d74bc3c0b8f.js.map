{"version":3,"sources":["indexOf.spec.js"],"names":["t","is","i","l","__data__","Spy","spy","Array","prototype","indexOf","true","calledWith"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;;;AAEA;;;;AAIA,mBAAK,mCAAL,EAA0C,aAAK;AAC7CA,IAAEC,EAAF,CAAK,gCAAL;AACD,CAFD;;AAMA,mBAAK,+DAAL,EAAsE,aAAK;AAAA;;AACzE,MAAMC,IAAI,CAAV;AACA,MAAMC,IAAI,EAAEC,UAAU,CAAE,CAAF,CAAZ,EAAV;;AAEA,MAAMC,MAAM,gBAAMC,GAAN,CAAUC,MAAMC,SAAN,CAAgBC,OAA1B,EAAmC,MAAnC,CAAZ;;AAEA,yBAAQN,CAAR,EAAWD,CAAX;;AAEAF,IAAEU,IAAF,uBAAO,6CAAIC,UAAJ,YAAe,gDAAEP,QAAjB,yCAA2BF,CAA3B,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CATD","file":"indexOf.spec.js","sourcesContent":["import test from 'ava'\n\nimport Sinon from 'sinon'\n\nimport indexOf from '../../source/list/indexOf'\n\nimport {\n  _,\n} from '../../source/utils/curry.js'\n\ntest('list#indexOf: should be curryable', t => {\n  t.is(indexOf(_), indexOf)\n})\n\n\n\ntest('list#indexOf: should call Array.prototype.indexOf w/ __data__', t => {\n  const i = 1\n  const l = { __data__: [ 1 ] }\n\n  const Spy = Sinon.spy(Array.prototype.indexOf, 'call')\n\n  indexOf(l, i)\n\n  t.true(Spy.calledWith(l.__data__, i))\n})\n"]}