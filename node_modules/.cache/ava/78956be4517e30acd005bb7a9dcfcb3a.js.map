{"version":3,"sources":["update.spec.js"],"names":["t","is","k","v","m1","__data__","__size__","m2","true","undefined"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;AAIA;;;;;;AAEA,mBAAK,iCAAL,EAAwC,aAAK;AAC3CA,IAAEC,EAAF,CAAK,+BAAL;AACD,CAFD;;AAKA,mBAAK,iCAAL,EAAwC,aAAK;AAAA;;AAC3C,MAAMC,IAAI,MAAV;AACA,MAAMC,IAAI,CAAV;;AAEA,MAAMC,KAAK;AACTC,kCAAaH,CAAb,EAAiBC,CAAjB,CADS;AAETG,cAAU;AAFD,GAAX;;AAKA,MAAMC,KAAK,sBAAOH,EAAP,EAAWF,CAAX,EAAc;AAAA,QAACC,CAAD,uEAAG,CAAH;AAAA,WAASA,IAAI,CAAb;AAAA,GAAd,CAAX;;AAEAH,IAAEQ,IAAF,uBAAO,kCAASJ,EAAT,yCAAaG,EAAb,yCAAiB,YAACL,CAAD,wCAAjB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAF,IAAEC,EAAF,CAAKG,GAAGC,QAAH,CAAYH,CAAZ,CAAL,EAAqB,CAArB;AACAF,IAAEC,EAAF,CAAKM,GAAGF,QAAH,CAAYH,CAAZ,CAAL,EAAqB,CAArB;AACAF,IAAEC,EAAF,CAAKM,GAAGD,QAAR,EAAkBF,GAAGE,QAArB;AACD,CAfD;;AAkBA,mBAAK,iDAAL,EAAwD,aAAK;AAAA;;AAC3D,MAAMJ,IAAI,MAAV;;AAEA,MAAME,KAAK;AACTC,cAAU,EADD;AAETC,cAAU;AAFD,GAAX;;AAKA,MAAMC,KAAK,sBAAOH,EAAP,EAAWF,CAAX,EAAc;AAAA,QAACC,CAAD,uEAAG,CAAH;AAAA,WAASA,IAAI,CAAb;AAAA,GAAd,CAAX;;AAEAH,IAAEQ,IAAF,yBAAO,mCAASJ,EAAT,0CAAaG,EAAb,0CAAiB,aAACL,CAAD,wCAAjB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAF,IAAEC,EAAF,CAAKG,GAAGC,QAAH,CAAYH,CAAZ,CAAL,EAAqBO,SAArB;AACAT,IAAEC,EAAF,CAAKM,GAAGF,QAAH,CAAYH,CAAZ,CAAL,EAAqB,CAArB;AACAF,IAAEC,EAAF,CAAKM,GAAGD,QAAR,EAAkBF,GAAGE,QAAH,GAAc,CAAhC;AACD,CAdD","file":"update.spec.js","sourcesContent":["import test from 'ava'\n\nimport update from '../../source/map/update'\n\nimport {\n  _,\n} from '../../source/utils/curry'\n\nimport { testRefs } from '../helpers'\n\ntest('map#update: should be curryable', t => {\n  t.is(update(_), update)\n})\n\n\ntest('map#update: should update value', t => {\n  const k = 'prop'\n  const v = 1\n\n  const m1 = {\n    __data__: { [k]: v },\n    __size__: 1\n  }\n\n  const m2 = update(m1, k, (v=0) => v + 1)\n\n  t.true(testRefs(m1, m2, [k]))\n  t.is(m1.__data__[k], 1)\n  t.is(m2.__data__[k], 2)\n  t.is(m2.__size__, m1.__size__)\n})\n\n\ntest('map#update: should update when no value already', t => {\n  const k = 'prop'\n\n  const m1 = {\n    __data__: {},\n    __size__: 0\n  }\n\n  const m2 = update(m1, k, (v=0) => v + 1)\n\n  t.true(testRefs(m1, m2, [k]))\n  t.is(m1.__data__[k], undefined)\n  t.is(m2.__data__[k], 1)\n  t.is(m2.__size__, m1.__size__ + 1)\n})\n"]}