{"version":3,"sources":["set.spec.js"],"names":["t","is","k","v","m1","__data__","__size__","m2","true","undefined","v1","v2"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;AAIA;;;;;;AAEA,mBAAK,8BAAL,EAAqC,aAAK;AACxCA,IAAEC,EAAF,CAAK,4BAAL;AACD,CAFD;;AAKA,mBAAK,+BAAL,EAAsC,aAAK;AAAA;;AACzC,MAAMC,IAAI,SAAV;AACA,MAAMC,IAAI,OAAV;;AAEA,MAAMC,KAAK;AACTC,cAAU,EADD;AAETC,cAAU;AAFD,GAAX;;AAKA,MAAMC,KAAK,mBAAIH,EAAJ,EAAQF,CAAR,EAAWC,CAAX,CAAX;;AAEAH,IAAEQ,IAAF,uBAAO,kCAASJ,EAAT,yCAAaG,EAAb,yCAAiB,YAACL,CAAD,wCAAjB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAF,IAAEC,EAAF,CAAKG,GAAGC,QAAH,CAAYH,CAAZ,CAAL,EAAqBO,SAArB;AACAT,IAAEC,EAAF,CAAKM,GAAGF,QAAH,CAAYH,CAAZ,CAAL,EAAqBC,CAArB;AACAH,IAAEC,EAAF,CAAKM,GAAGD,QAAR,EAAkBF,GAAGE,QAAH,GAAc,CAAhC;AACD,CAfD;;AAkBA,mBAAK,iCAAL,EAAwC,aAAK;AAAA;;AAC3C,MAAMJ,IAAK,SAAX;AACA,MAAMQ,KAAK,QAAX;AACA,MAAMC,KAAK,QAAX;;AAEA,MAAMP,KAAK;AACTC,kCAAaH,CAAb,EAAiBQ,EAAjB,CADS;AAETJ,cAAU;AAFD,GAAX;;AAKA,MAAMC,KAAK,mBAAIH,EAAJ,EAAQF,CAAR,EAAWS,EAAX,CAAX;;AAEAX,IAAEQ,IAAF,yBAAO,mCAASJ,EAAT,0CAAaG,EAAb,0CAAiB,aAACL,CAAD,wCAAjB,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAF,IAAEC,EAAF,CAAKG,GAAGC,QAAH,CAAYH,CAAZ,CAAL,EAAqBQ,EAArB;AACAV,IAAEC,EAAF,CAAKM,GAAGF,QAAH,CAAYH,CAAZ,CAAL,EAAqBS,EAArB;AACAX,IAAEC,EAAF,CAAKM,GAAGD,QAAR,EAAkBF,GAAGE,QAArB;AACD,CAhBD","file":"set.spec.js","sourcesContent":["import test from 'ava'\n\nimport set from '../../source/map/set'\n\nimport {\n  _,\n} from '../../source/utils/curry'\n\nimport { testRefs } from '../helpers'\n\ntest('map#set: should be curryable', t => {\n  t.is(set(_), set)\n})\n\n\ntest('map#set: should set new value', t => {\n  const k = 'propOne'\n  const v = 'value'\n\n  const m1 = {\n    __data__: {},\n    __size__: 0,\n  }\n\n  const m2 = set(m1, k, v)\n\n  t.true(testRefs(m1, m2, [k]))\n  t.is(m1.__data__[k], undefined)\n  t.is(m2.__data__[k], v)\n  t.is(m2.__size__, m1.__size__ + 1)\n})\n\n\ntest('map#set: should overwrite value', t => {\n  const k  = 'propOne'\n  const v1 = 'value1'\n  const v2 = 'value2'\n\n  const m1 = {\n    __data__: { [k]: v1 },\n    __size__: 0,\n  }\n\n  const m2 = set(m1, k, v2)\n\n  t.true(testRefs(m1, m2, [k]))\n  t.is(m1.__data__[k], v1)\n  t.is(m2.__data__[k], v2)\n  t.is(m2.__size__, m1.__size__)\n})\n"]}