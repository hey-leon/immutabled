'use strict';

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _merge = require('../../source/map/merge');

var _merge2 = _interopRequireDefault(_merge);

var _curry = require('../../source/utils/curry');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

(0, _ava2.default)('map#merge: should be curryable', function (t) {
  t.is((0, _merge2.default)(_curry._), _merge2.default);
});

(0, _ava2.default)('map#merge: should merge value', function (t) {
  var m1 = { __data__: { p: 1 }, __size__: 1 };
  var m2 = { __data__: { b: 1 }, __size__: 1 };

  var m3 = (0, _merge2.default)(m1, m2);
  t.not(m3, m1);
  t.not(m3, m2);
  t.not(m3.__data__, m1.__data__);
  t.not(m3.__data__, m2.__data__);
  t.deepEqual(Object.keys(m3.__data__), [].concat(_toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(m1.__data__)), _toConsumableArray(Object.keys(m2.__data__)))))));
  t.deepEqual(m3.__data__, { p: 1, b: 1 });
  t.is(m3.__size__, 2);
});

(0, _ava2.default)('map#merge: should merge value overwriting m1', function (t) {
  var m1 = { __data__: { a: 1, b: 3 }, __size__: 1 };
  var m2 = { __data__: { b: 1, c: 9 }, __size__: 1 };

  var m3 = (0, _merge2.default)(m1, m2);
  t.not(m3, m1);
  t.not(m3, m2);
  t.not(m3.__data__, m1.__data__);
  t.not(m3.__data__, m2.__data__);
  t.deepEqual(Object.keys(m3.__data__), [].concat(_toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(m1.__data__)), _toConsumableArray(Object.keys(m2.__data__)))))));
  t.deepEqual(m3.__data__, { a: 1, b: 1, c: 9 });
  t.is(m3.__size__, 3);
});
//# sourceMappingURL=../../node_modules/.cache/ava/2a716e8a223a5654ebd766dd074bedec.js.map