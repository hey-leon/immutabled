'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _immut = require('../../source/immut');

var _immut2 = _interopRequireDefault(_immut);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('exports: from is included', function (t) {
  var _rec = new _powerAssertRecorder();

  t.true(_rec._expr(_rec._capt(_rec._capt(_rec._capt(_immut2.default, 'arguments/0/left/object').from, 'arguments/0/left') instanceof _rec._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(immut.from instanceof Function)',
    filepath: 'tests/immut/index.spec.js',
    line: 6,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"immut","range":[7,12]},"property":{"type":"Identifier","name":"from","range":[13,17]},"computed":false,"range":[7,17]},"right":{"type":"Identifier","name":"Function","range":[29,37]},"range":[7,37]}],"range":[0,38]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"immut","range":[7,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"from","range":[13,17]},{"type":{"label":"instanceof"},"value":"instanceof","range":[18,28]},{"type":{"label":"name"},"value":"Function","range":[29,37]},{"type":{"label":")"},"range":[37,38]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: size is included', function (t) {
  var _rec2 = new _powerAssertRecorder();

  t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_immut2.default, 'arguments/0/left/object').size, 'arguments/0/left') instanceof _rec2._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(immut.size instanceof Function)',
    filepath: 'tests/immut/index.spec.js',
    line: 10,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"immut","range":[7,12]},"property":{"type":"Identifier","name":"size","range":[13,17]},"computed":false,"range":[7,17]},"right":{"type":"Identifier","name":"Function","range":[29,37]},"range":[7,37]}],"range":[0,38]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"immut","range":[7,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"size","range":[13,17]},{"type":{"label":"instanceof"},"value":"instanceof","range":[18,28]},{"type":{"label":"name"},"value":"Function","range":[29,37]},{"type":{"label":")"},"range":[37,38]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: data is included', function (t) {
  var _rec3 = new _powerAssertRecorder();

  t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_immut2.default, 'arguments/0/left/object').data, 'arguments/0/left') instanceof _rec3._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(immut.data instanceof Function)',
    filepath: 'tests/immut/index.spec.js',
    line: 14,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"immut","range":[7,12]},"property":{"type":"Identifier","name":"data","range":[13,17]},"computed":false,"range":[7,17]},"right":{"type":"Identifier","name":"Function","range":[29,37]},"range":[7,37]}],"range":[0,38]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"immut","range":[7,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"data","range":[13,17]},{"type":{"label":"instanceof"},"value":"instanceof","range":[18,28]},{"type":{"label":"name"},"value":"Function","range":[29,37]},{"type":{"label":")"},"range":[37,38]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: apply is included', function (t) {
  var _rec4 = new _powerAssertRecorder();

  t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_immut2.default, 'arguments/0/left/object').apply, 'arguments/0/left') instanceof _rec4._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(immut.apply instanceof Function)',
    filepath: 'tests/immut/index.spec.js',
    line: 18,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"immut","range":[7,12]},"property":{"type":"Identifier","name":"apply","range":[13,18]},"computed":false,"range":[7,18]},"right":{"type":"Identifier","name":"Function","range":[30,38]},"range":[7,38]}],"range":[0,39]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"immut","range":[7,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"apply","range":[13,18]},{"type":{"label":"instanceof"},"value":"instanceof","range":[19,29]},{"type":{"label":"name"},"value":"Function","range":[30,38]},{"type":{"label":")"},"range":[38,39]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: get is included', function (t) {
  var _rec5 = new _powerAssertRecorder();

  t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_immut2.default, 'arguments/0/left/object').get, 'arguments/0/left') instanceof _rec5._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(immut.get instanceof Function)',
    filepath: 'tests/immut/index.spec.js',
    line: 22,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"MemberExpression","object":{"type":"Identifier","name":"immut","range":[7,12]},"property":{"type":"Identifier","name":"get","range":[13,16]},"computed":false,"range":[7,16]},"right":{"type":"Identifier","name":"Function","range":[28,36]},"range":[7,36]}],"range":[0,37]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"immut","range":[7,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"get","range":[13,16]},{"type":{"label":"instanceof"},"value":"instanceof","range":[17,27]},{"type":{"label":"name"},"value":"Function","range":[28,36]},{"type":{"label":")"},"range":[36,37]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});
//# sourceMappingURL=../../node_modules/.cache/ava/bdca7a9210f6a1ac7f3b7805eeecc804.js.map