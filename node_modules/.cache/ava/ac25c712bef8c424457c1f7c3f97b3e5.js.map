{"version":3,"sources":["filter.spec.js"],"names":["t","is","l","__data__","f","__type__","list","Spy","spy","Array","prototype","filter","true","calledWith"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAIA,mBAAK,kCAAL,EAAyC,aAAK;AAC5CA,IAAEC,EAAF,CAAK,+BAAL;AACD,CAFD;;AAKA,mBAAK,wCAAL,EAA+C,aAAK;AAClD,MAAMC,IAAI;AACRC,cAAU;AADF,GAAV;;AAIAH,IAAEC,EAAF,CAAK,sBAAOC,CAAP,EAAU;AAAA,WAAKE,CAAL;AAAA,GAAV,EAAkBC,QAAvB,EAAiC,kBAAQC,IAAzC;AACD,CAND;;AASA,mBAAK,6DAAL,EAAoE,aAAK;AAAA;;AACvE,MAAMF,IAAI;AAAA,WAAKA,EAAL;AAAA,GAAV;AACA,MAAMF,IAAI;AACRC,cAAU;AADF,GAAV;;AAIA,MAAMI,MAAM,gBAAMC,GAAN,CAAUC,MAAMC,SAAN,CAAgBC,MAA1B,EAAkC,MAAlC,CAAZ;;AAEA,wBAAOT,CAAP,EAAUE,CAAV;;AAEAJ,IAAEY,IAAF,uBAAO,6CAAIC,UAAJ,YAAe,gDAAEV,QAAjB,yCAA2BC,CAA3B,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAXD","file":"filter.spec.js","sourcesContent":["import test from 'ava'\n\nimport Sinon from 'sinon'\n\nimport symbols from '../../source/consts/symbols'\nimport filter  from '../../source/list/filter'\n\nimport {\n  _,\n} from '../../source/utils/curry.js'\n\ntest('list#filter: should be curryable', t => {\n  t.is(filter(_), filter)\n})\n\n\ntest('list#filter: should return a list type', t => {\n  const l = {\n    __data__: []\n  }\n\n  t.is(filter(l, f => f).__type__, symbols.list)\n})\n\n\ntest('list#filter: should call Array.prototype.filter w/ __data__', t => {\n  const f = f => f\n  const l = {\n    __data__: []\n  }\n\n  const Spy = Sinon.spy(Array.prototype.filter, 'call')\n\n  filter(l, f)\n\n  t.true(Spy.calledWith(l.__data__, f))\n})\n"]}