{"version":3,"sources":["map.spec.js"],"names":["t","is","l","__data__","f","__type__","list","Spy","spy","Array","prototype","map","true","calledWith"],"mappings":";;;;;AAAA;;;;AAEA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAIA,mBAAK,+BAAL,EAAsC,aAAK;AACzCA,IAAEC,EAAF,CAAK,4BAAL;AACD,CAFD;;AAKA,mBAAK,qCAAL,EAA4C,aAAK;AAC/C,MAAMC,IAAI;AACRC,cAAU;AADF,GAAV;;AAIAH,IAAEC,EAAF,CAAK,mBAAIC,CAAJ,EAAO;AAAA,WAAKE,CAAL;AAAA,GAAP,EAAeC,QAApB,EAA8B,kBAAQC,IAAtC;AACD,CAND;;AASA,mBAAK,uDAAL,EAA8D,aAAK;AAAA;;AACjE,MAAMF,IAAI;AAAA,WAAKA,EAAL;AAAA,GAAV;AACA,MAAMF,IAAI;AACRC,cAAU;AADF,GAAV;;AAIA,MAAMI,MAAM,gBAAMC,GAAN,CAAUC,MAAMC,SAAN,CAAgBC,GAA1B,EAA+B,MAA/B,CAAZ;;AAEA,qBAAIT,CAAJ,EAAOE,CAAP;;AAEAJ,IAAEY,IAAF,uBAAO,6CAAIC,UAAJ,YAAe,gDAAEV,QAAjB,yCAA2BC,CAA3B,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAXD","file":"map.spec.js","sourcesContent":["import test from 'ava'\n\nimport Sinon from 'sinon'\n\nimport symbols from '../../source/consts/symbols'\nimport map  from '../../source/list/map'\n\nimport {\n  _,\n} from '../../source/utils/curry.js'\n\ntest('list#map: should be curryable', t => {\n  t.is(map(_), map)\n})\n\n\ntest('list#map: should return a list type', t => {\n  const l = {\n    __data__: [],\n  }\n\n  t.is(map(l, f => f).__type__, symbols.list)\n})\n\n\ntest('list#map: should call Array.prototype.map w/ __data__', t => {\n  const f = f => f\n  const l = {\n    __data__: [],\n  }\n\n  const Spy = Sinon.spy(Array.prototype.map, 'call')\n\n  map(l, f)\n\n  t.true(Spy.calledWith(l.__data__, f))\n})\n"]}