'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _source = require('../source');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('exports: immut is included', function (t) {
  var _rec = new _powerAssertRecorder();

  t.true(_rec._expr(_rec._capt(_rec._capt(_source.immut, 'arguments/0/left') === _rec._capt(Object(_rec._capt(_source.immut, 'arguments/0/right/arguments/0')), 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(immut === Object(immut))',
    filepath: 'tests/index.spec.js',
    line: 18,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"===","left":{"type":"Identifier","name":"immut","range":[7,12]},"right":{"type":"CallExpression","callee":{"type":"Identifier","name":"Object","range":[17,23]},"arguments":[{"type":"Identifier","name":"immut","range":[24,29]}],"range":[17,30]},"range":[7,30]}],"range":[0,31]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"immut","range":[7,12]},{"type":{"label":"==/!="},"value":"===","range":[13,16]},{"type":{"label":"name"},"value":"Object","range":[17,23]},{"type":{"label":"("},"range":[23,24]},{"type":{"label":"name"},"value":"immut","range":[24,29]},{"type":{"label":")"},"range":[29,30]},{"type":{"label":")"},"range":[30,31]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: map is included', function (t) {
  var _rec2 = new _powerAssertRecorder();

  t.true(_rec2._expr(_rec2._capt(_rec2._capt(_source.map, 'arguments/0/left') === _rec2._capt(Object(_rec2._capt(_source.map, 'arguments/0/right/arguments/0')), 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(map === Object(map))',
    filepath: 'tests/index.spec.js',
    line: 23,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"===","left":{"type":"Identifier","name":"map","range":[7,10]},"right":{"type":"CallExpression","callee":{"type":"Identifier","name":"Object","range":[15,21]},"arguments":[{"type":"Identifier","name":"map","range":[22,25]}],"range":[15,26]},"range":[7,26]}],"range":[0,27]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"map","range":[7,10]},{"type":{"label":"==/!="},"value":"===","range":[11,14]},{"type":{"label":"name"},"value":"Object","range":[15,21]},{"type":{"label":"("},"range":[21,22]},{"type":{"label":"name"},"value":"map","range":[22,25]},{"type":{"label":")"},"range":[25,26]},{"type":{"label":")"},"range":[26,27]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: list is included', function (t) {
  var _rec3 = new _powerAssertRecorder();

  t.true(_rec3._expr(_rec3._capt(_rec3._capt(_source.list, 'arguments/0/left') === _rec3._capt(Object(_rec3._capt(_source.list, 'arguments/0/right/arguments/0')), 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(list === Object(list))',
    filepath: 'tests/index.spec.js',
    line: 28,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"===","left":{"type":"Identifier","name":"list","range":[7,11]},"right":{"type":"CallExpression","callee":{"type":"Identifier","name":"Object","range":[16,22]},"arguments":[{"type":"Identifier","name":"list","range":[23,27]}],"range":[16,28]},"range":[7,28]}],"range":[0,29]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"list","range":[7,11]},{"type":{"label":"==/!="},"value":"===","range":[12,15]},{"type":{"label":"name"},"value":"Object","range":[16,22]},{"type":{"label":"("},"range":[22,23]},{"type":{"label":"name"},"value":"list","range":[23,27]},{"type":{"label":")"},"range":[27,28]},{"type":{"label":")"},"range":[28,29]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: _ (no bind) is included', function (t) {
  var _rec4 = new _powerAssertRecorder();

  t.true(_rec4._expr(_rec4._capt(_rec4._capt(_source._, 'arguments/0/left') === _rec4._capt(_rec4._capt(Symbol, 'arguments/0/right/callee/object').for('no_bind'), 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(_ === Symbol.for(\'no_bind\'))',
    filepath: 'tests/index.spec.js',
    line: 33,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"===","left":{"type":"Identifier","name":"_","range":[7,8]},"right":{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"Symbol","range":[13,19]},"property":{"type":"Identifier","name":"for","range":[20,23]},"computed":false,"range":[13,23]},"arguments":[{"type":"StringLiteral","value":"no_bind","range":[24,33]}],"range":[13,34]},"range":[7,34]}],"range":[0,35]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"_","range":[7,8]},{"type":{"label":"==/!="},"value":"===","range":[9,12]},{"type":{"label":"name"},"value":"Symbol","range":[13,19]},{"type":{"label":"."},"range":[19,20]},{"type":{"label":"for"},"value":"for","range":[20,23]},{"type":{"label":"("},"range":[23,24]},{"type":{"label":"string"},"value":"no_bind","range":[24,33]},{"type":{"label":")"},"range":[33,34]},{"type":{"label":")"},"range":[34,35]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: #curry is included', function (t) {
  var _rec5 = new _powerAssertRecorder();

  t.true(_rec5._expr(_rec5._capt(_rec5._capt(_source.curry, 'arguments/0/left') instanceof _rec5._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(curry instanceof Function)',
    filepath: 'tests/index.spec.js',
    line: 38,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"Identifier","name":"curry","range":[7,12]},"right":{"type":"Identifier","name":"Function","range":[24,32]},"range":[7,32]}],"range":[0,33]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"curry","range":[7,12]},{"type":{"label":"instanceof"},"value":"instanceof","range":[13,23]},{"type":{"label":"name"},"value":"Function","range":[24,32]},{"type":{"label":")"},"range":[32,33]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('exports: #is* is included', function (t) {
  var _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder(),
      _rec10 = new _powerAssertRecorder();

  t.true(_rec6._expr(_rec6._capt(_rec6._capt(_source.isList, 'arguments/0/left') instanceof _rec6._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(isList instanceof Function)',
    filepath: 'tests/index.spec.js',
    line: 43,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"Identifier","name":"isList","range":[7,13]},"right":{"type":"Identifier","name":"Function","range":[25,33]},"range":[7,33]}],"range":[0,34]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isList","range":[7,13]},{"type":{"label":"instanceof"},"value":"instanceof","range":[14,24]},{"type":{"label":"name"},"value":"Function","range":[25,33]},{"type":{"label":")"},"range":[33,34]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec7._expr(_rec7._capt(_rec7._capt(_source.isMap, 'arguments/0/left') instanceof _rec7._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(isMap instanceof Function)',
    filepath: 'tests/index.spec.js',
    line: 44,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"Identifier","name":"isMap","range":[7,12]},"right":{"type":"Identifier","name":"Function","range":[24,32]},"range":[7,32]}],"range":[0,33]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isMap","range":[7,12]},{"type":{"label":"instanceof"},"value":"instanceof","range":[13,23]},{"type":{"label":"name"},"value":"Function","range":[24,32]},{"type":{"label":")"},"range":[32,33]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec8._expr(_rec8._capt(_rec8._capt(_source.isArray, 'arguments/0/left') instanceof _rec8._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(isArray instanceof Function)',
    filepath: 'tests/index.spec.js',
    line: 45,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"Identifier","name":"isArray","range":[7,14]},"right":{"type":"Identifier","name":"Function","range":[26,34]},"range":[7,34]}],"range":[0,35]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isArray","range":[7,14]},{"type":{"label":"instanceof"},"value":"instanceof","range":[15,25]},{"type":{"label":"name"},"value":"Function","range":[26,34]},{"type":{"label":")"},"range":[34,35]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec9._expr(_rec9._capt(_rec9._capt(_source.isObject, 'arguments/0/left') instanceof _rec9._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(isObject instanceof Function)',
    filepath: 'tests/index.spec.js',
    line: 46,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"Identifier","name":"isObject","range":[7,15]},"right":{"type":"Identifier","name":"Function","range":[27,35]},"range":[7,35]}],"range":[0,36]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isObject","range":[7,15]},{"type":{"label":"instanceof"},"value":"instanceof","range":[16,26]},{"type":{"label":"name"},"value":"Function","range":[27,35]},{"type":{"label":")"},"range":[35,36]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.true(_rec10._expr(_rec10._capt(_rec10._capt(_source.isPrimitive, 'arguments/0/left') instanceof _rec10._capt(Function, 'arguments/0/right'), 'arguments/0'), {
    content: 't.true(isPrimitive instanceof Function)',
    filepath: 'tests/index.spec.js',
    line: 47,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"instanceof","left":{"type":"Identifier","name":"isPrimitive","range":[7,18]},"right":{"type":"Identifier","name":"Function","range":[30,38]},"range":[7,38]}],"range":[0,39]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isPrimitive","range":[7,18]},{"type":{"label":"instanceof"},"value":"instanceof","range":[19,29]},{"type":{"label":"name"},"value":"Function","range":[30,38]},{"type":{"label":")"},"range":[38,39]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});
//# sourceMappingURL=../node_modules/.cache/ava/92da430de4192f7258791ed2ac4e0f1b.js.map