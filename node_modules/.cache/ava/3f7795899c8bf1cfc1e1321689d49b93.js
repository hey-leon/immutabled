'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _curry = require('../../source/utils/curry.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('_: should === Symbol.for("no_bind"', function (t) {
  t.is(_curry._, Symbol.for('no_bind'));
});

(0, _ava2.default)('#isNoBind: should return true if arg === no bind', function (t) {
  var _rec = new _powerAssertRecorder();

  t.true(_rec._expr(_rec._capt((0, _curry.isNoBind)(_rec._capt(_curry._, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.true(isNoBind(_))',
    filepath: 'tests/utils/curry.spec.js',
    line: 19,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isNoBind","range":[7,15]},"arguments":[{"type":"Identifier","name":"_","range":[16,17]}],"range":[7,18]}],"range":[0,19]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"isNoBind","range":[7,15]},{"type":{"label":"("},"range":[15,16]},{"type":{"label":"name"},"value":"_","range":[16,17]},{"type":{"label":")"},"range":[17,18]},{"type":{"label":")"},"range":[18,19]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('#isNoBind: should return false if arg !== no bind', function (t) {
  var _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder();

  t.false(_rec2._expr(_rec2._capt((0, _curry.isNoBind)('_'), 'arguments/0'), {
    content: 't.false(isNoBind(\'_\'))',
    filepath: 'tests/utils/curry.spec.js',
    line: 24,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isNoBind","range":[8,16]},"arguments":[{"type":"StringLiteral","value":"_","range":[17,20]}],"range":[8,21]}],"range":[0,22]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isNoBind","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"string"},"value":"_","range":[17,20]},{"type":{"label":")"},"range":[20,21]},{"type":{"label":")"},"range":[21,22]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec3._expr(_rec3._capt((0, _curry.isNoBind)(2), 'arguments/0'), {
    content: 't.false(isNoBind(2))',
    filepath: 'tests/utils/curry.spec.js',
    line: 25,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isNoBind","range":[8,16]},"arguments":[{"type":"NumericLiteral","value":2,"range":[17,18]}],"range":[8,19]}],"range":[0,20]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isNoBind","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"num"},"value":2,"range":[17,18]},{"type":{"label":")"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec4._expr(_rec4._capt((0, _curry.isNoBind)(_rec4._capt([], 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isNoBind([]))',
    filepath: 'tests/utils/curry.spec.js',
    line: 26,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isNoBind","range":[8,16]},"arguments":[{"type":"ArrayExpression","elements":[],"range":[17,19]}],"range":[8,20]}],"range":[0,21]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isNoBind","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"["},"range":[17,18]},{"type":{"label":"]"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]},{"type":{"label":")"},"range":[20,21]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec5._expr(_rec5._capt((0, _curry.isNoBind)(_rec5._capt({}, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isNoBind({}))',
    filepath: 'tests/utils/curry.spec.js',
    line: 27,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isNoBind","range":[8,16]},"arguments":[{"type":"ObjectExpression","properties":[],"range":[17,19]}],"range":[8,20]}],"range":[0,21]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isNoBind","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"{"},"range":[17,18]},{"type":{"label":"}"},"range":[18,19]},{"type":{"label":")"},"range":[19,20]},{"type":{"label":")"},"range":[20,21]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec6._expr(_rec6._capt((0, _curry.isNoBind)(_rec6._capt(Symbol('rand'), 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.false(isNoBind(Symbol(\'rand\')))',
    filepath: 'tests/utils/curry.spec.js',
    line: 28,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isNoBind","range":[8,16]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"Symbol","range":[17,23]},"arguments":[{"type":"StringLiteral","value":"rand","range":[24,30]}],"range":[17,31]}],"range":[8,32]}],"range":[0,33]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isNoBind","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"name"},"value":"Symbol","range":[17,23]},{"type":{"label":"("},"range":[23,24]},{"type":{"label":"string"},"value":"rand","range":[24,30]},{"type":{"label":")"},"range":[30,31]},{"type":{"label":")"},"range":[31,32]},{"type":{"label":")"},"range":[32,33]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
  t.false(_rec7._expr(_rec7._capt((0, _curry.isNoBind)(function (f) {
    return f;
  }), 'arguments/0'), {
    content: 't.false(isNoBind(f => f))',
    filepath: 'tests/utils/curry.spec.js',
    line: 29,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"isNoBind","range":[8,16]},"arguments":[{"type":"ArrowFunctionExpression","params":[{"type":"Identifier","name":"f","range":[17,18]}],"body":{"type":"Identifier","name":"f","range":[22,23]},"async":false,"range":[17,23]}],"range":[8,24]}],"range":[0,25]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"isNoBind","range":[8,16]},{"type":{"label":"("},"range":[16,17]},{"type":{"label":"name"},"value":"f","range":[17,18]},{"type":{"label":"=>"},"range":[19,21]},{"type":{"label":"name"},"value":"f","range":[22,23]},{"type":{"label":")"},"range":[23,24]},{"type":{"label":")"},"range":[24,25]}]',
    visitorKeys: _powerAssertVisitorKeys
  }));
});

(0, _ava2.default)('#curry: should return the correct curried func', function (t) {
  var f3 = function f3(a, b, c) {
    return c;
  };
  var f2 = function f2(a, b) {
    return b;
  };
  var f1 = function f1(a) {
    return a;
  };

  t.is((0, _curry.curry)(f1).name, 'c1');
  t.is((0, _curry.curry)(f2).name, 'c2');
  t.is((0, _curry.curry)(f3).name, 'c3');
});

(0, _ava2.default)('#curry1: should return a curried 1 arg func', function (t) {
  var testFunc = function testFunc(a) {
    return a;
  };

  var cf1 = (0, _curry.curry1)(testFunc);

  t.is(cf1.name, 'c1');
  t.is(cf1.length, 1);
  t.is(cf1(), cf1);
  t.is(cf1(_curry._), cf1);

  t.is(cf1(1), 1);
});

(0, _ava2.default)('#curry2: should return a curried 2 arg func', function (t) {
  var testFunc = function testFunc(a, b) {
    return b;
  };

  var cf2 = (0, _curry.curry2)(testFunc);

  t.is(cf2.name, 'c2');
  t.is(cf2.length, 2);
  t.is(cf2(), cf2);
  t.is(cf2(_curry._), cf2);
  t.is(cf2(_curry._, _curry._), cf2);

  t.is(cf2(1, 2), 2);
  t.is(cf2(1)(2), 2);
  t.is(cf2(1, _curry._)(2), 2);
  t.is(cf2(_curry._, 2)(1), 2);
});

(0, _ava2.default)('#curry3: should return a curried 3 arg func', function (t) {
  var testFunc = function testFunc(a, b, c) {
    return c;
  };

  var cf3 = (0, _curry.curry3)(testFunc);

  t.is(cf3.name, 'c3');
  t.is(cf3.length, 3);
  t.is(cf3(), cf3);
  t.is(cf3(_curry._), cf3);
  t.is(cf3(_curry._, _curry._), cf3);
  t.is(cf3(_curry._, _curry._, _curry._), cf3);

  t.is(cf3(1, 2, 3), 3);
  t.is(cf3(1, 2)(3), 3);
  t.is(cf3(1, 2, _curry._)(3), 3);
  t.is(cf3(1, _curry._, 3)(2), 3);
  t.is(cf3(_curry._, 2, 3)(1), 3);
  t.is(cf3(1)(2)(3), 3);
  t.is(cf3(1)(2, _curry._)(3), 3);
  t.is(cf3(1, _curry._)(2)(3), 3);
  t.is(cf3(1, _curry._)(2, _curry._)(3), 3);
  t.is(cf3(1, _curry._)(_curry._, 3)(2), 3);
  t.is(cf3(1, _curry._, _curry._)(2)(3), 3);
  t.is(cf3(1, _curry._, _curry._)(2, _curry._)(3), 3);
  t.is(cf3(1, _curry._, _curry._)(_curry._, 3)(2), 3);
  t.is(cf3(_curry._, 2)(1)(3), 3);
  t.is(cf3(_curry._, 2)(1, _curry._)(3), 3);
  t.is(cf3(_curry._, 2)(_curry._, 3)(1), 3);
  t.is(cf3(_curry._, 2, _curry._)(1)(3), 3);
  t.is(cf3(_curry._, 2, _curry._)(1, _curry._)(3), 3);
  t.is(cf3(_curry._, 2, _curry._)(_curry._, 3)(1), 3);
  t.is(cf3(_curry._, _curry._, 3)(1)(2), 3);
  t.is(cf3(_curry._, _curry._, 3)(1, _curry._)(2), 3);
  t.is(cf3(_curry._, _curry._, 3)(_curry._, 2)(1), 3);
});
//# sourceMappingURL=../../node_modules/.cache/ava/3f7795899c8bf1cfc1e1321689d49b93.js.map